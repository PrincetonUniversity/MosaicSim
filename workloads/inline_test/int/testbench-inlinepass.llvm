; ModuleID = 'int/testbench.llvm'
source_filename = "testbench.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::move_iterator" = type { i32* }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEE9push_backERKi = comdat any

$_ZNSt6vectorIiSaIiEE2atEm = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS0_PT_DpOS5_ = comdat any

$_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaIiEE12_S_constructIiJRKiEEENSt9enable_ifIXsr6__and_INS1_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS0_PS7_DpOS8_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIiEE11_S_max_sizeIKS0_vEEmRT_i = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPiE4baseEv = comdat any

$_ZNSt13move_iteratorIPiEC2ES0_ = comdat any

$_ZNSt16allocator_traitsISaIiEE10_S_destroyIiEENSt9enable_ifIXsr6__and_INS1_16__destroy_helperIT_E4typeEEE5valueEvE4typeERS0_PS5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZNKSt6vectorIiSaIiEE14_M_range_checkEm = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_testbench.cc, i8* null }]

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %0 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #3
  ret void
}

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline uwtable
define dso_local i32 @_Z6helperiPi(i32 %myint, i32* %a) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %retval.i1.i.i.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i1.i.i.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i.i.i.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %retval.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %__n.addr.i.i.i = alloca i64, align 8
  %ref.tmp.i.i.i = alloca i64, align 8
  %myvec = alloca %"class.std::vector", align 8
  %0 = bitcast %"class.std::vector"* %myvec to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #3
  %1 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0
  %_M_impl.i.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1, i64 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %_M_impl.i.i to %"class.std::allocator"*
  %3 = bitcast %"class.std::allocator"* %2 to %"class.__gnu_cxx::new_allocator"*
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %_M_impl.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc
  %arrayidx5 = getelementptr inbounds i32, i32* %a, i64 99
  %5 = load i32, i32* %arrayidx5, align 4, !tbaa !2
  %conv = sext i32 %5 to i64
  %_M_finish.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast i32** %_M_finish.i.i.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !6
  %8 = bitcast %"class.std::vector"* %myvec to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !10
  %sub.ptr.sub.i.i.i = sub i64 %7, %9
  %sub.ptr.div.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i, 2
  %cmp.i.i = icmp ugt i64 %sub.ptr.div.i.i.i, %conv
  br i1 %cmp.i.i, label %_ZNSt6vectorIiSaIiEE2atEm.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.cond.cleanup
  %_M_finish.i1.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i32** %_M_finish.i1.i.i to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !6
  %12 = bitcast %"class.std::vector"* %myvec to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !10
  %sub.ptr.sub.i2.i.i = sub i64 %11, %13
  %sub.ptr.div.i3.i.i = ashr exact i64 %sub.ptr.sub.i2.i.i, 2
  invoke void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i64 %conv, i64 %sub.ptr.div.i3.i.i) #12
          to label %.noexc unwind label %lpad6

.noexc:                                           ; preds = %if.then.i.i
  unreachable

_ZNSt6vectorIiSaIiEE2atEm.exit:                   ; preds = %for.cond.cleanup
  %_M_start.i.i1 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %_M_start.i.i1, align 8, !tbaa !10
  %add.ptr.i.i = getelementptr inbounds i32, i32* %14, i64 %conv
  br label %invoke.cont7

for.body:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ 1, %entry ], [ %indvars.iv.next, %for.inc ]
  %15 = add nsw i64 %indvars.iv, -1
  %arrayidx = getelementptr inbounds i32, i32* %a, i64 %15
  %16 = load i32, i32* %arrayidx, align 4, !tbaa !2
  %mul = shl nsw i32 %16, 1
  %arrayidx2 = getelementptr inbounds i32, i32* %a, i64 %indvars.iv
  store i32 %mul, i32* %arrayidx2, align 4, !tbaa !2
  %_M_finish.i2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 1
  %17 = load i32*, i32** %_M_finish.i2, align 8, !tbaa !6
  %_M_end_of_storage.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 2
  %18 = load i32*, i32** %_M_end_of_storage.i, align 8, !tbaa !11
  %cmp.i = icmp eq i32* %17, %18
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %for.body
  %19 = bitcast %"class.std::vector"* %myvec to %"class.std::allocator"*
  %20 = bitcast %"class.std::allocator"* %19 to %"class.__gnu_cxx::new_allocator"*
  %21 = load i32, i32* %arrayidx2, align 4, !tbaa !2
  store i32 %21, i32* %17, align 4, !tbaa !2
  %22 = load i32*, i32** %_M_finish.i2, align 8, !tbaa !6
  %incdec.ptr.i = getelementptr inbounds i32, i32* %22, i64 1
  store i32* %incdec.ptr.i, i32** %_M_finish.i2, align 8, !tbaa !6
  br label %_ZNSt6vectorIiSaIiEE9push_backERKi.exit

if.else.i:                                        ; preds = %for.body
  %23 = bitcast i64* %__n.addr.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23)
  store i64 1, i64* %__n.addr.i.i.i, align 8, !tbaa !12
  %24 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base"* %24 to %"class.std::allocator"*
  %26 = bitcast %"class.std::allocator"* %25 to %"class.__gnu_cxx::new_allocator"*
  %_M_finish.i7.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 1
  %27 = bitcast i32** %_M_finish.i7.i.i.i to i64*
  %28 = load i64, i64* %27, align 8, !tbaa !6
  %29 = bitcast %"class.std::vector"* %myvec to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !10
  %sub.ptr.sub.i8.i.i.i = sub i64 %28, %30
  %sub.ptr.div.i9.i.i.i = ashr exact i64 %sub.ptr.sub.i8.i.i.i, 2
  %sub.i.i.i = sub i64 4611686018427387903, %sub.ptr.div.i9.i.i.i
  %cmp.i.i.i = icmp ult i64 %sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then.i.i.i3, label %if.end.i.i.i

if.then.i.i.i3:                                   ; preds = %if.else.i
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #12
          to label %.noexc13 unwind label %lpad

.noexc13:                                         ; preds = %if.then.i.i.i3
  unreachable

if.end.i.i.i:                                     ; preds = %if.else.i
  %_M_finish.i4.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast i32** %_M_finish.i4.i.i.i to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !6
  %33 = bitcast %"class.std::vector"* %myvec to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !10
  %sub.ptr.sub.i5.i.i.i = sub i64 %32, %34
  %sub.ptr.div.i6.i.i.i = ashr exact i64 %sub.ptr.sub.i5.i.i.i, 2
  %35 = bitcast i64* %ref.tmp.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #3
  %_M_finish.i1.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 1
  %36 = bitcast i32** %_M_finish.i1.i.i.i to i64*
  %37 = load i64, i64* %36, align 8, !tbaa !6
  %38 = bitcast %"class.std::vector"* %myvec to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !10
  %sub.ptr.sub.i2.i.i.i = sub i64 %37, %39
  %sub.ptr.div.i3.i.i.i = ashr exact i64 %sub.ptr.sub.i2.i.i.i, 2
  store i64 %sub.ptr.div.i3.i.i.i, i64* %ref.tmp.i.i.i, align 8, !tbaa !12
  %40 = load i64, i64* %ref.tmp.i.i.i, align 8, !tbaa !12
  %41 = load i64, i64* %__n.addr.i.i.i, align 8, !tbaa !12
  %cmp.i.i.i.i = icmp ult i64 %40, %41
  %__b.__a.i.i.i.i = select i1 %cmp.i.i.i.i, i64* %__n.addr.i.i.i, i64* %ref.tmp.i.i.i
  %42 = load i64, i64* %__b.__a.i.i.i.i, align 8, !tbaa !12
  %add.i.i.i = add i64 %42, %sub.ptr.div.i6.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #3
  %_M_finish.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 1
  %43 = bitcast i32** %_M_finish.i.i.i.i to i64*
  %44 = load i64, i64* %43, align 8, !tbaa !6
  %45 = bitcast %"class.std::vector"* %myvec to i64*
  %46 = load i64, i64* %45, align 8, !tbaa !10
  %sub.ptr.sub.i.i.i.i = sub i64 %44, %46
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp7.i.i.i = icmp ult i64 %add.i.i.i, %sub.ptr.div.i.i.i.i
  br i1 %cmp7.i.i.i, label %cond.true.i.i.i, label %lor.lhs.false.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.end.i.i.i
  %47 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0
  %48 = bitcast %"struct.std::_Vector_base"* %47 to %"class.std::allocator"*
  %49 = bitcast %"class.std::allocator"* %48 to %"class.__gnu_cxx::new_allocator"*
  %cmp9.i.i.i = icmp ugt i64 %add.i.i.i, 4611686018427387903
  br i1 %cmp9.i.i.i, label %cond.true.i.i.i, label %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i

cond.true.i.i.i:                                  ; preds = %lor.lhs.false.i.i.i, %if.end.i.i.i
  %50 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0
  %51 = bitcast %"struct.std::_Vector_base"* %50 to %"class.std::allocator"*
  %52 = bitcast %"class.std::allocator"* %51 to %"class.__gnu_cxx::new_allocator"*
  br label %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i

_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i: ; preds = %cond.true.i.i.i, %lor.lhs.false.i.i.i
  %cond.i.i.i = phi i64 [ 4611686018427387903, %cond.true.i.i.i ], [ %add.i.i.i, %lor.lhs.false.i.i.i ]
  %53 = bitcast i64* %__n.addr.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53)
  %54 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0
  %cmp.i1.i.i = icmp eq i64 %cond.i.i.i, 0
  br i1 %cmp.i1.i.i, label %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i, label %cond.true.i2.i.i

cond.true.i2.i.i:                                 ; preds = %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i
  %55 = bitcast %"struct.std::_Vector_base"* %54 to %"class.std::allocator"*
  %56 = bitcast %"class.std::allocator"* %55 to %"class.__gnu_cxx::new_allocator"*
  %cmp.i.i.i.i.i = icmp ult i64 4611686018427387903, %cond.i.i.i
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i.i.i.i, label %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i

if.then.i.i.i.i.i:                                ; preds = %cond.true.i2.i.i
  invoke void @_ZSt17__throw_bad_allocv() #12
          to label %.noexc14 unwind label %lpad

.noexc14:                                         ; preds = %if.then.i.i.i.i.i
  unreachable

_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i: ; preds = %cond.true.i2.i.i
  %mul.i.i.i.i.i = shl i64 %cond.i.i.i, 2
  %call2.i.i.i.i.i15 = invoke i8* @_Znwm(i64 %mul.i.i.i.i.i)
          to label %call2.i.i.i.i.i.noexc unwind label %lpad

call2.i.i.i.i.i.noexc:                            ; preds = %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i
  %57 = bitcast i8* %call2.i.i.i.i.i15 to i32*
  br label %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i

_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i: ; preds = %call2.i.i.i.i.i.noexc, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i
  %cond.i3.i.i = phi i32* [ %57, %call2.i.i.i.i.i.noexc ], [ null, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i ]
  %58 = bitcast %"class.std::vector"* %myvec to %"class.std::allocator"*
  %_M_finish.i.i.i4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 1
  %59 = bitcast i32** %_M_finish.i.i.i4 to i64*
  %60 = load i64, i64* %59, align 8, !tbaa !6
  %61 = bitcast %"class.std::vector"* %myvec to i64*
  %62 = load i64, i64* %61, align 8, !tbaa !10
  %sub.ptr.sub.i.i.i5 = sub i64 %60, %62
  %sub.ptr.div.i.i.i6 = ashr exact i64 %sub.ptr.sub.i.i.i5, 2
  %add.ptr.i.i7 = getelementptr inbounds i32, i32* %cond.i3.i.i, i64 %sub.ptr.div.i.i.i6
  %63 = bitcast %"class.std::allocator"* %58 to %"class.__gnu_cxx::new_allocator"*
  %64 = load i32, i32* %arrayidx2, align 4, !tbaa !2
  store i32 %64, i32* %add.ptr.i.i7, align 4, !tbaa !2
  %_M_start.i.i8 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 0
  %65 = load i32*, i32** %_M_start.i.i8, align 8, !tbaa !10
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 1
  %66 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !6
  %67 = bitcast %"struct.std::_Vector_base"* %54 to %"class.std::allocator"*
  %68 = bitcast %"class.std::move_iterator"* %retval.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %68)
  %_M_current.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i.i.i.i, i64 0, i32 0
  store i32* %65, i32** %_M_current.i.i.i.i.i, align 8, !tbaa !14
  %coerce.dive.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i.i.i.i, i64 0, i32 0
  %69 = load i32*, i32** %coerce.dive.i.i.i.i, align 8
  %70 = bitcast %"class.std::move_iterator"* %retval.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %70)
  %71 = bitcast %"class.std::move_iterator"* %retval.i1.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71)
  %_M_current.i.i2.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i1.i.i.i, i64 0, i32 0
  store i32* %66, i32** %_M_current.i.i2.i.i.i, align 8, !tbaa !14
  %coerce.dive.i3.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i1.i.i.i, i64 0, i32 0
  %72 = load i32*, i32** %coerce.dive.i3.i.i.i, align 8
  %73 = bitcast %"class.std::move_iterator"* %retval.i1.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %73)
  %74 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %74)
  %coerce.dive.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i.i, i64 0, i32 0
  store i32* %69, i32** %coerce.dive.i.i.i.i.i.i.i.i.i, align 8
  %_M_current.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i.i, i64 0, i32 0
  %75 = load i32*, i32** %_M_current.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !14
  %76 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76)
  %77 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %77)
  %coerce.dive.i.i2.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i.i, i64 0, i32 0
  store i32* %72, i32** %coerce.dive.i.i2.i.i.i.i.i.i.i, align 8
  %_M_current.i.i.i3.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i.i, i64 0, i32 0
  %78 = load i32*, i32** %_M_current.i.i.i3.i.i.i.i.i.i.i, align 8, !tbaa !14
  %79 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79)
  %sub.ptr.lhs.cast.i.i.i.i.i.i.i.i.i.i = ptrtoint i32* %78 to i64
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i.i.i = ptrtoint i32* %75 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i.i.i.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i, 2
  %tobool.i.i.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i.i, label %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i, label %if.then.i.i.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i.i.i:                      ; preds = %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i
  %80 = bitcast i32* %cond.i3.i.i to i8*
  %81 = bitcast i32* %75 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i, i1 false) #3
  br label %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i

_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i: ; preds = %if.then.i.i.i.i.i.i.i.i.i.i, %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i
  %add.ptr.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %cond.i3.i.i, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i.i
  %incdec.ptr.i.i = getelementptr inbounds i32, i32* %add.ptr.i.i.i.i.i.i.i.i.i.i, i64 1
  %82 = load i32*, i32** %_M_start.i.i8, align 8, !tbaa !10
  %83 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !6
  %84 = bitcast %"struct.std::_Vector_base"* %54 to %"class.std::allocator"*
  %85 = load i32*, i32** %_M_start.i.i8, align 8, !tbaa !10
  %_M_end_of_storage.i.i9 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 2
  %86 = bitcast i32** %_M_end_of_storage.i.i9 to i64*
  %87 = load i64, i64* %86, align 8, !tbaa !11
  %sub.ptr.rhs.cast.i.i10 = ptrtoint i32* %85 to i64
  %sub.ptr.sub.i.i11 = sub i64 %87, %sub.ptr.rhs.cast.i.i10
  %sub.ptr.div.i.i12 = ashr exact i64 %sub.ptr.sub.i.i11, 2
  %tobool.i9.i.i = icmp eq i32* %85, null
  br i1 %tobool.i9.i.i, label %_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit.i, label %if.then.i10.i.i

if.then.i10.i.i:                                  ; preds = %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i
  %88 = bitcast %"struct.std::_Vector_base"* %54 to %"class.std::allocator"*
  %89 = bitcast %"class.std::allocator"* %88 to %"class.__gnu_cxx::new_allocator"*
  %90 = bitcast i32* %85 to i8*
  call void @_ZdlPv(i8* %90) #3
  br label %_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit.i

_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit.i: ; preds = %if.then.i10.i.i, %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i
  store i32* %cond.i3.i.i, i32** %_M_start.i.i8, align 8, !tbaa !10
  store i32* %incdec.ptr.i.i, i32** %_M_finish.i.i, align 8, !tbaa !6
  %add.ptr33.i.i = getelementptr inbounds i32, i32* %cond.i3.i.i, i64 %cond.i.i.i
  store i32* %add.ptr33.i.i, i32** %_M_end_of_storage.i.i9, align 8, !tbaa !11
  br label %_ZNSt6vectorIiSaIiEE9push_backERKi.exit

_ZNSt6vectorIiSaIiEE9push_backERKi.exit:          ; preds = %if.then.i, %_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit.i
  br label %for.inc

for.inc:                                          ; preds = %_ZNSt6vectorIiSaIiEE9push_backERKi.exit
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp = icmp ult i64 %indvars.iv.next, 100
  br i1 %cmp, label %for.body, label %for.cond.cleanup

lpad:                                             ; preds = %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i, %if.then.i.i.i.i.i, %if.then.i.i.i3
  %91 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

invoke.cont7:                                     ; preds = %_ZNSt6vectorIiSaIiEE2atEm.exit
  %92 = load i32, i32* %add.ptr.i.i, align 4, !tbaa !2
  %93 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0
  %_M_start.i16 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 0
  %94 = load i32*, i32** %_M_start.i16, align 8, !tbaa !10
  %_M_finish.i17 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 1
  %95 = load i32*, i32** %_M_finish.i17, align 8, !tbaa !6
  %96 = bitcast %"struct.std::_Vector_base"* %93 to %"class.std::allocator"*
  %_M_start.i.i18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %93, i64 0, i32 0, i32 0
  %97 = load i32*, i32** %_M_start.i.i18, align 8, !tbaa !10
  %_M_end_of_storage.i.i19 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %93, i64 0, i32 0, i32 2
  %98 = bitcast i32** %_M_end_of_storage.i.i19 to i64*
  %99 = load i64, i64* %98, align 8, !tbaa !11
  %sub.ptr.rhs.cast.i.i20 = ptrtoint i32* %97 to i64
  %sub.ptr.sub.i.i21 = sub i64 %99, %sub.ptr.rhs.cast.i.i20
  %sub.ptr.div.i.i22 = ashr exact i64 %sub.ptr.sub.i.i21, 2
  %tobool.i.i.i23 = icmp eq i32* %97, null
  br i1 %tobool.i.i.i23, label %_ZNSt6vectorIiSaIiEED2Ev.exit25, label %if.then.i.i.i24

if.then.i.i.i24:                                  ; preds = %invoke.cont7
  %100 = bitcast %"struct.std::_Vector_base"* %93 to %"class.std::allocator"*
  %101 = bitcast %"class.std::allocator"* %100 to %"class.__gnu_cxx::new_allocator"*
  %102 = bitcast i32* %97 to i8*
  call void @_ZdlPv(i8* %102) #3
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit25

_ZNSt6vectorIiSaIiEED2Ev.exit25:                  ; preds = %invoke.cont7, %if.then.i.i.i24
  %103 = bitcast %"struct.std::_Vector_base"* %93 to %"class.__gnu_cxx::new_allocator"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #3
  ret i32 %92

lpad6:                                            ; preds = %if.then.i.i
  %104 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad6, %lpad
  %.sink21 = phi { i8*, i32 } [ %104, %lpad6 ], [ %91, %lpad ]
  %105 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0
  %_M_start.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 0
  %106 = load i32*, i32** %_M_start.i, align 8, !tbaa !10
  %_M_finish.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec, i64 0, i32 0, i32 0, i32 1
  %107 = load i32*, i32** %_M_finish.i, align 8, !tbaa !6
  %108 = bitcast %"struct.std::_Vector_base"* %105 to %"class.std::allocator"*
  %_M_start.i.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %105, i64 0, i32 0, i32 0
  %109 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !10
  %_M_end_of_storage.i.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %105, i64 0, i32 0, i32 2
  %110 = bitcast i32** %_M_end_of_storage.i.i to i64*
  %111 = load i64, i64* %110, align 8, !tbaa !11
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %109 to i64
  %sub.ptr.sub.i.i = sub i64 %111, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %tobool.i.i.i = icmp eq i32* %109, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIiSaIiEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %ehcleanup
  %112 = bitcast %"struct.std::_Vector_base"* %105 to %"class.std::allocator"*
  %113 = bitcast %"class.std::allocator"* %112 to %"class.__gnu_cxx::new_allocator"*
  %114 = bitcast i32* %109 to i8*
  call void @_ZdlPv(i8* %114) #3
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit

_ZNSt6vectorIiSaIiEED2Ev.exit:                    ; preds = %ehcleanup, %if.then.i.i.i
  %115 = bitcast %"struct.std::_Vector_base"* %105 to %"class.__gnu_cxx::new_allocator"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #3
  resume { i8*, i32 } %.sink21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #4

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %_M_impl.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i64 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %_M_impl.i to %"class.std::allocator"*
  %2 = bitcast %"class.std::allocator"* %1 to %"class.__gnu_cxx::new_allocator"*
  %3 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %_M_impl.i to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #3
  br label %invoke.cont

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; No predecessors!
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = tail call i8* @__cxa_begin_catch(i8* %5) #3
  tail call void @_ZSt9terminatev() #13
  unreachable

__clang_call_terminate.exit:                      ; No predecessors!
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector"* %this, i32* dereferenceable(4) %__x) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %retval.i1.i.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i1.i.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i.i.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %retval.i.i.i = alloca %"class.std::move_iterator", align 8
  %__n.addr.i.i = alloca i64, align 8
  %ref.tmp.i.i = alloca i64, align 8
  %_M_finish = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish, align 8, !tbaa !6
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 2
  %1 = load i32*, i32** %_M_end_of_storage, align 8, !tbaa !11
  %cmp = icmp eq i32* %0, %1
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %2 = bitcast %"class.std::vector"* %this to %"class.std::allocator"*
  %3 = bitcast %"class.std::allocator"* %2 to %"class.__gnu_cxx::new_allocator"*
  %4 = load i32, i32* %__x, align 4, !tbaa !2
  store i32 %4, i32* %0, align 4, !tbaa !2
  %5 = load i32*, i32** %_M_finish, align 8, !tbaa !6
  %incdec.ptr = getelementptr inbounds i32, i32* %5, i64 1
  store i32* %incdec.ptr, i32** %_M_finish, align 8, !tbaa !6
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = bitcast i64* %__n.addr.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6)
  store i64 1, i64* %__n.addr.i.i, align 8, !tbaa !12
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base"* %7 to %"class.std::allocator"*
  %9 = bitcast %"class.std::allocator"* %8 to %"class.__gnu_cxx::new_allocator"*
  %_M_finish.i7.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i32** %_M_finish.i7.i.i to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !6
  %12 = bitcast %"class.std::vector"* %this to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !10
  %sub.ptr.sub.i8.i.i = sub i64 %11, %13
  %sub.ptr.div.i9.i.i = ashr exact i64 %sub.ptr.sub.i8.i.i, 2
  %sub.i.i = sub i64 4611686018427387903, %sub.ptr.div.i9.i.i
  %cmp.i.i = icmp ult i64 %sub.i.i, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #12
  unreachable

if.end.i.i:                                       ; preds = %if.else
  %_M_finish.i4.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast i32** %_M_finish.i4.i.i to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !6
  %16 = bitcast %"class.std::vector"* %this to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !10
  %sub.ptr.sub.i5.i.i = sub i64 %15, %17
  %sub.ptr.div.i6.i.i = ashr exact i64 %sub.ptr.sub.i5.i.i, 2
  %18 = bitcast i64* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #3
  %_M_finish.i1.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast i32** %_M_finish.i1.i.i to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !6
  %21 = bitcast %"class.std::vector"* %this to i64*
  %22 = load i64, i64* %21, align 8, !tbaa !10
  %sub.ptr.sub.i2.i.i = sub i64 %20, %22
  %sub.ptr.div.i3.i.i = ashr exact i64 %sub.ptr.sub.i2.i.i, 2
  store i64 %sub.ptr.div.i3.i.i, i64* %ref.tmp.i.i, align 8, !tbaa !12
  %23 = load i64, i64* %ref.tmp.i.i, align 8, !tbaa !12
  %24 = load i64, i64* %__n.addr.i.i, align 8, !tbaa !12
  %cmp.i.i.i = icmp ult i64 %23, %24
  %__b.__a.i.i.i = select i1 %cmp.i.i.i, i64* %__n.addr.i.i, i64* %ref.tmp.i.i
  %25 = load i64, i64* %__b.__a.i.i.i, align 8, !tbaa !12
  %add.i.i = add i64 %25, %sub.ptr.div.i6.i.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #3
  %_M_finish.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast i32** %_M_finish.i.i.i to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !6
  %28 = bitcast %"class.std::vector"* %this to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !10
  %sub.ptr.sub.i.i.i = sub i64 %27, %29
  %sub.ptr.div.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i, 2
  %cmp7.i.i = icmp ult i64 %add.i.i, %sub.ptr.div.i.i.i
  br i1 %cmp7.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %if.end.i.i
  %30 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base"* %30 to %"class.std::allocator"*
  %32 = bitcast %"class.std::allocator"* %31 to %"class.__gnu_cxx::new_allocator"*
  %cmp9.i.i = icmp ugt i64 %add.i.i, 4611686018427387903
  br i1 %cmp9.i.i, label %cond.true.i.i, label %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %if.end.i.i
  %33 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base"* %33 to %"class.std::allocator"*
  %35 = bitcast %"class.std::allocator"* %34 to %"class.__gnu_cxx::new_allocator"*
  br label %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i

_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i:  ; preds = %cond.true.i.i, %lor.lhs.false.i.i
  %cond.i.i = phi i64 [ 4611686018427387903, %cond.true.i.i ], [ %add.i.i, %lor.lhs.false.i.i ]
  %36 = bitcast i64* %__n.addr.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36)
  %37 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %cmp.i1.i = icmp eq i64 %cond.i.i, 0
  br i1 %cmp.i1.i, label %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i, label %cond.true.i2.i

cond.true.i2.i:                                   ; preds = %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i
  %38 = bitcast %"struct.std::_Vector_base"* %37 to %"class.std::allocator"*
  %39 = bitcast %"class.std::allocator"* %38 to %"class.__gnu_cxx::new_allocator"*
  %cmp.i.i.i.i = icmp ult i64 4611686018427387903, %cond.i.i
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i

if.then.i.i.i.i:                                  ; preds = %cond.true.i2.i
  tail call void @_ZSt17__throw_bad_allocv() #12
  unreachable

_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i: ; preds = %cond.true.i2.i
  %mul.i.i.i.i = shl i64 %cond.i.i, 2
  %call2.i.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i.i)
  %40 = bitcast i8* %call2.i.i.i.i to i32*
  br label %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i

_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i: ; preds = %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i
  %cond.i3.i = phi i32* [ %40, %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i ], [ null, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i ]
  %41 = bitcast %"class.std::vector"* %this to %"class.std::allocator"*
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %42 = bitcast i32** %_M_finish.i.i to i64*
  %43 = load i64, i64* %42, align 8, !tbaa !6
  %44 = bitcast %"class.std::vector"* %this to i64*
  %45 = load i64, i64* %44, align 8, !tbaa !10
  %sub.ptr.sub.i.i = sub i64 %43, %45
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %add.ptr.i = getelementptr inbounds i32, i32* %cond.i3.i, i64 %sub.ptr.div.i.i
  %46 = bitcast %"class.std::allocator"* %41 to %"class.__gnu_cxx::new_allocator"*
  %47 = load i32, i32* %__x, align 4, !tbaa !2
  store i32 %47, i32* %add.ptr.i, align 4, !tbaa !2
  %_M_start.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %_M_start.i, align 8, !tbaa !10
  %_M_finish.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %49 = load i32*, i32** %_M_finish.i, align 8, !tbaa !6
  %50 = bitcast %"struct.std::_Vector_base"* %37 to %"class.std::allocator"*
  %51 = bitcast %"class.std::move_iterator"* %retval.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51)
  %_M_current.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i.i.i, i64 0, i32 0
  store i32* %48, i32** %_M_current.i.i.i.i, align 8, !tbaa !14
  %coerce.dive.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i.i.i, i64 0, i32 0
  %52 = load i32*, i32** %coerce.dive.i.i.i, align 8
  %53 = bitcast %"class.std::move_iterator"* %retval.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53)
  %54 = bitcast %"class.std::move_iterator"* %retval.i1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54)
  %_M_current.i.i2.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i1.i.i, i64 0, i32 0
  store i32* %49, i32** %_M_current.i.i2.i.i, align 8, !tbaa !14
  %coerce.dive.i3.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i1.i.i, i64 0, i32 0
  %55 = load i32*, i32** %coerce.dive.i3.i.i, align 8
  %56 = bitcast %"class.std::move_iterator"* %retval.i1.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56)
  %57 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57)
  %coerce.dive.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i, i64 0, i32 0
  store i32* %52, i32** %coerce.dive.i.i.i.i.i.i.i.i, align 8
  %_M_current.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i, i64 0, i32 0
  %58 = load i32*, i32** %_M_current.i.i.i.i.i.i.i.i.i, align 8, !tbaa !14
  %59 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59)
  %60 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60)
  %coerce.dive.i.i2.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i, i64 0, i32 0
  store i32* %55, i32** %coerce.dive.i.i2.i.i.i.i.i.i, align 8
  %_M_current.i.i.i3.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i, i64 0, i32 0
  %61 = load i32*, i32** %_M_current.i.i.i3.i.i.i.i.i.i, align 8, !tbaa !14
  %62 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62)
  %sub.ptr.lhs.cast.i.i.i.i.i.i.i.i.i = ptrtoint i32* %61 to i64
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i.i = ptrtoint i32* %58 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i.i.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i, 2
  %tobool.i.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i, label %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i, label %if.then.i.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i.i:                        ; preds = %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i
  %63 = bitcast i32* %cond.i3.i to i8*
  %64 = bitcast i32* %58 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i, i1 false) #3
  br label %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i

_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i: ; preds = %if.then.i.i.i.i.i.i.i.i.i, %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i
  %add.ptr.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %cond.i3.i, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i
  %incdec.ptr.i = getelementptr inbounds i32, i32* %add.ptr.i.i.i.i.i.i.i.i.i, i64 1
  %65 = load i32*, i32** %_M_start.i, align 8, !tbaa !10
  %66 = load i32*, i32** %_M_finish.i, align 8, !tbaa !6
  %67 = bitcast %"struct.std::_Vector_base"* %37 to %"class.std::allocator"*
  %68 = load i32*, i32** %_M_start.i, align 8, !tbaa !10
  %_M_end_of_storage.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 2
  %69 = bitcast i32** %_M_end_of_storage.i to i64*
  %70 = load i64, i64* %69, align 8, !tbaa !11
  %sub.ptr.rhs.cast.i = ptrtoint i32* %68 to i64
  %sub.ptr.sub.i = sub i64 %70, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %tobool.i9.i = icmp eq i32* %68, null
  br i1 %tobool.i9.i, label %_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit, label %if.then.i10.i

if.then.i10.i:                                    ; preds = %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i
  %71 = bitcast %"struct.std::_Vector_base"* %37 to %"class.std::allocator"*
  %72 = bitcast %"class.std::allocator"* %71 to %"class.__gnu_cxx::new_allocator"*
  %73 = bitcast i32* %68 to i8*
  tail call void @_ZdlPv(i8* %73) #3
  br label %_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit

_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit: ; preds = %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i, %if.then.i10.i
  store i32* %cond.i3.i, i32** %_M_start.i, align 8, !tbaa !10
  store i32* %incdec.ptr.i, i32** %_M_finish.i, align 8, !tbaa !6
  %add.ptr33.i = getelementptr inbounds i32, i32* %cond.i3.i, i64 %cond.i.i
  store i32* %add.ptr33.i, i32** %_M_end_of_storage.i, align 8, !tbaa !11
  br label %if.end

if.end:                                           ; preds = %_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit, %if.then
  ret void
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #4

; Function Attrs: noinline uwtable
define linkonce_odr dso_local dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEE2atEm(%"class.std::vector"* %this, i64 %__n) local_unnamed_addr #0 comdat align 2 {
entry:
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %0 = bitcast i32** %_M_finish.i.i to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !6
  %2 = bitcast %"class.std::vector"* %this to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !10
  %sub.ptr.sub.i.i = sub i64 %1, %3
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ugt i64 %sub.ptr.div.i.i, %__n
  br i1 %cmp.i, label %_ZNKSt6vectorIiSaIiEE14_M_range_checkEm.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %_M_finish.i1.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i32** %_M_finish.i1.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !6
  %6 = bitcast %"class.std::vector"* %this to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !10
  %sub.ptr.sub.i2.i = sub i64 %5, %7
  %sub.ptr.div.i3.i = ashr exact i64 %sub.ptr.sub.i2.i, 2
  tail call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i64 %__n, i64 %sub.ptr.div.i3.i) #12
  unreachable

_ZNKSt6vectorIiSaIiEE14_M_range_checkEm.exit:     ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %_M_start.i, align 8, !tbaa !10
  %add.ptr.i = getelementptr inbounds i32, i32* %8, i64 %__n
  ret i32* %add.ptr.i
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %_M_start = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start, align 8, !tbaa !10
  %_M_finish = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %2 = load i32*, i32** %_M_finish, align 8, !tbaa !6
  %3 = bitcast %"struct.std::_Vector_base"* %0 to %"class.std::allocator"*
  br label %invoke.cont

invoke.cont:                                      ; preds = %entry
  %_M_start.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i64 0, i32 0, i32 0
  %4 = load i32*, i32** %_M_start.i, align 8, !tbaa !10
  %_M_end_of_storage.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i64 0, i32 0, i32 2
  %5 = bitcast i32** %_M_end_of_storage.i to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !11
  %sub.ptr.rhs.cast.i = ptrtoint i32* %4 to i64
  %sub.ptr.sub.i = sub i64 %6, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %tobool.i.i = icmp eq i32* %4, null
  br i1 %tobool.i.i, label %_ZNSt12_Vector_baseIiSaIiEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %invoke.cont
  %7 = bitcast %"struct.std::_Vector_base"* %0 to %"class.std::allocator"*
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = bitcast i32* %4 to i8*
  call void @_ZdlPv(i8* %9) #3
  br label %_ZNSt12_Vector_baseIiSaIiEED2Ev.exit

_ZNSt12_Vector_baseIiSaIiEED2Ev.exit:             ; preds = %invoke.cont, %if.then.i.i
  %10 = bitcast %"struct.std::_Vector_base"* %0 to %"class.__gnu_cxx::new_allocator"*
  ret void

lpad:                                             ; No predecessors!
  %11 = landingpad { i8*, i32 }
          catch i8* null
  %12 = extractvalue { i8*, i32 } %11, 0
  %_M_start.i1 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %_M_start.i1, align 8, !tbaa !10
  %_M_end_of_storage.i2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i64 0, i32 0, i32 2
  %14 = bitcast i32** %_M_end_of_storage.i2 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !11
  %sub.ptr.rhs.cast.i3 = ptrtoint i32* %13 to i64
  %sub.ptr.sub.i4 = sub i64 %15, %sub.ptr.rhs.cast.i3
  %sub.ptr.div.i5 = ashr exact i64 %sub.ptr.sub.i4, 2
  %tobool.i.i6 = icmp eq i32* %13, null
  br i1 %tobool.i.i6, label %_ZNSt12_Vector_baseIiSaIiEED2Ev.exit8, label %if.then.i.i7

if.then.i.i7:                                     ; preds = %lpad
  %16 = bitcast %"struct.std::_Vector_base"* %0 to %"class.std::allocator"*
  %17 = bitcast %"class.std::allocator"* %16 to %"class.__gnu_cxx::new_allocator"*
  %18 = bitcast i32* %13 to i8*
  call void @_ZdlPv(i8* %18) #3
  br label %_ZNSt12_Vector_baseIiSaIiEED2Ev.exit8

_ZNSt12_Vector_baseIiSaIiEED2Ev.exit8:            ; preds = %lpad, %if.then.i.i7
  %19 = bitcast %"struct.std::_Vector_base"* %0 to %"class.__gnu_cxx::new_allocator"*
  %20 = tail call i8* @__cxa_begin_catch(i8* %12) #3
  tail call void @_ZSt9terminatev() #13
  unreachable

__clang_call_terminate.exit:                      ; No predecessors!
  unreachable
}

; Function Attrs: noinline uwtable
define dso_local i32 @_Z8randfunciPi(i32 %myint, i32* %a) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %retval.i1.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i1.i.i.i.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i.i.i.i.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %retval.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %__n.addr.i.i.i.i = alloca i64, align 8
  %ref.tmp.i.i.i.i = alloca i64, align 8
  %myvec.i = alloca %"class.std::vector", align 8
  %.pre = load i32, i32* %a, align 4, !tbaa !2
  %arrayidx2 = getelementptr inbounds i32, i32* %a, i64 1
  store i32 %.pre, i32* %arrayidx2, align 4, !tbaa !2
  %arrayidx2.1 = getelementptr inbounds i32, i32* %a, i64 2
  store i32 %.pre, i32* %arrayidx2.1, align 4, !tbaa !2
  %arrayidx2.2 = getelementptr inbounds i32, i32* %a, i64 3
  store i32 %.pre, i32* %arrayidx2.2, align 4, !tbaa !2
  %arrayidx2.3 = getelementptr inbounds i32, i32* %a, i64 4
  store i32 %.pre, i32* %arrayidx2.3, align 4, !tbaa !2
  %arrayidx2.4 = getelementptr inbounds i32, i32* %a, i64 5
  store i32 %.pre, i32* %arrayidx2.4, align 4, !tbaa !2
  %arrayidx2.5 = getelementptr inbounds i32, i32* %a, i64 6
  store i32 %.pre, i32* %arrayidx2.5, align 4, !tbaa !2
  %arrayidx2.6 = getelementptr inbounds i32, i32* %a, i64 7
  store i32 %.pre, i32* %arrayidx2.6, align 4, !tbaa !2
  %arrayidx2.7 = getelementptr inbounds i32, i32* %a, i64 8
  store i32 %.pre, i32* %arrayidx2.7, align 4, !tbaa !2
  %arrayidx2.8 = getelementptr inbounds i32, i32* %a, i64 9
  store i32 %.pre, i32* %arrayidx2.8, align 4, !tbaa !2
  %arrayidx2.9 = getelementptr inbounds i32, i32* %a, i64 10
  store i32 %.pre, i32* %arrayidx2.9, align 4, !tbaa !2
  %arrayidx2.10 = getelementptr inbounds i32, i32* %a, i64 11
  store i32 %.pre, i32* %arrayidx2.10, align 4, !tbaa !2
  %arrayidx2.11 = getelementptr inbounds i32, i32* %a, i64 12
  store i32 %.pre, i32* %arrayidx2.11, align 4, !tbaa !2
  %arrayidx2.12 = getelementptr inbounds i32, i32* %a, i64 13
  store i32 %.pre, i32* %arrayidx2.12, align 4, !tbaa !2
  %arrayidx2.13 = getelementptr inbounds i32, i32* %a, i64 14
  store i32 %.pre, i32* %arrayidx2.13, align 4, !tbaa !2
  %arrayidx2.14 = getelementptr inbounds i32, i32* %a, i64 15
  store i32 %.pre, i32* %arrayidx2.14, align 4, !tbaa !2
  %arrayidx2.15 = getelementptr inbounds i32, i32* %a, i64 16
  store i32 %.pre, i32* %arrayidx2.15, align 4, !tbaa !2
  %arrayidx2.16 = getelementptr inbounds i32, i32* %a, i64 17
  store i32 %.pre, i32* %arrayidx2.16, align 4, !tbaa !2
  %arrayidx2.17 = getelementptr inbounds i32, i32* %a, i64 18
  store i32 %.pre, i32* %arrayidx2.17, align 4, !tbaa !2
  %arrayidx2.18 = getelementptr inbounds i32, i32* %a, i64 19
  store i32 %.pre, i32* %arrayidx2.18, align 4, !tbaa !2
  %arrayidx2.19 = getelementptr inbounds i32, i32* %a, i64 20
  store i32 %.pre, i32* %arrayidx2.19, align 4, !tbaa !2
  %arrayidx2.20 = getelementptr inbounds i32, i32* %a, i64 21
  store i32 %.pre, i32* %arrayidx2.20, align 4, !tbaa !2
  %arrayidx2.21 = getelementptr inbounds i32, i32* %a, i64 22
  store i32 %.pre, i32* %arrayidx2.21, align 4, !tbaa !2
  %arrayidx2.22 = getelementptr inbounds i32, i32* %a, i64 23
  store i32 %.pre, i32* %arrayidx2.22, align 4, !tbaa !2
  %arrayidx2.23 = getelementptr inbounds i32, i32* %a, i64 24
  store i32 %.pre, i32* %arrayidx2.23, align 4, !tbaa !2
  %arrayidx2.24 = getelementptr inbounds i32, i32* %a, i64 25
  store i32 %.pre, i32* %arrayidx2.24, align 4, !tbaa !2
  %arrayidx2.25 = getelementptr inbounds i32, i32* %a, i64 26
  store i32 %.pre, i32* %arrayidx2.25, align 4, !tbaa !2
  %arrayidx2.26 = getelementptr inbounds i32, i32* %a, i64 27
  store i32 %.pre, i32* %arrayidx2.26, align 4, !tbaa !2
  %arrayidx2.27 = getelementptr inbounds i32, i32* %a, i64 28
  store i32 %.pre, i32* %arrayidx2.27, align 4, !tbaa !2
  %arrayidx2.28 = getelementptr inbounds i32, i32* %a, i64 29
  store i32 %.pre, i32* %arrayidx2.28, align 4, !tbaa !2
  %arrayidx2.29 = getelementptr inbounds i32, i32* %a, i64 30
  store i32 %.pre, i32* %arrayidx2.29, align 4, !tbaa !2
  %arrayidx2.30 = getelementptr inbounds i32, i32* %a, i64 31
  store i32 %.pre, i32* %arrayidx2.30, align 4, !tbaa !2
  %arrayidx2.31 = getelementptr inbounds i32, i32* %a, i64 32
  store i32 %.pre, i32* %arrayidx2.31, align 4, !tbaa !2
  %arrayidx2.32 = getelementptr inbounds i32, i32* %a, i64 33
  store i32 %.pre, i32* %arrayidx2.32, align 4, !tbaa !2
  %arrayidx2.33 = getelementptr inbounds i32, i32* %a, i64 34
  store i32 %.pre, i32* %arrayidx2.33, align 4, !tbaa !2
  %arrayidx2.34 = getelementptr inbounds i32, i32* %a, i64 35
  store i32 %.pre, i32* %arrayidx2.34, align 4, !tbaa !2
  %arrayidx2.35 = getelementptr inbounds i32, i32* %a, i64 36
  store i32 %.pre, i32* %arrayidx2.35, align 4, !tbaa !2
  %arrayidx2.36 = getelementptr inbounds i32, i32* %a, i64 37
  store i32 %.pre, i32* %arrayidx2.36, align 4, !tbaa !2
  %arrayidx2.37 = getelementptr inbounds i32, i32* %a, i64 38
  store i32 %.pre, i32* %arrayidx2.37, align 4, !tbaa !2
  %arrayidx2.38 = getelementptr inbounds i32, i32* %a, i64 39
  store i32 %.pre, i32* %arrayidx2.38, align 4, !tbaa !2
  %arrayidx2.39 = getelementptr inbounds i32, i32* %a, i64 40
  store i32 %.pre, i32* %arrayidx2.39, align 4, !tbaa !2
  %arrayidx2.40 = getelementptr inbounds i32, i32* %a, i64 41
  store i32 %.pre, i32* %arrayidx2.40, align 4, !tbaa !2
  %arrayidx2.41 = getelementptr inbounds i32, i32* %a, i64 42
  store i32 %.pre, i32* %arrayidx2.41, align 4, !tbaa !2
  %arrayidx2.42 = getelementptr inbounds i32, i32* %a, i64 43
  store i32 %.pre, i32* %arrayidx2.42, align 4, !tbaa !2
  %arrayidx2.43 = getelementptr inbounds i32, i32* %a, i64 44
  store i32 %.pre, i32* %arrayidx2.43, align 4, !tbaa !2
  %arrayidx2.44 = getelementptr inbounds i32, i32* %a, i64 45
  store i32 %.pre, i32* %arrayidx2.44, align 4, !tbaa !2
  %arrayidx2.45 = getelementptr inbounds i32, i32* %a, i64 46
  store i32 %.pre, i32* %arrayidx2.45, align 4, !tbaa !2
  %arrayidx2.46 = getelementptr inbounds i32, i32* %a, i64 47
  store i32 %.pre, i32* %arrayidx2.46, align 4, !tbaa !2
  %arrayidx2.47 = getelementptr inbounds i32, i32* %a, i64 48
  store i32 %.pre, i32* %arrayidx2.47, align 4, !tbaa !2
  %arrayidx2.48 = getelementptr inbounds i32, i32* %a, i64 49
  store i32 %.pre, i32* %arrayidx2.48, align 4, !tbaa !2
  %arrayidx2.49 = getelementptr inbounds i32, i32* %a, i64 50
  store i32 %.pre, i32* %arrayidx2.49, align 4, !tbaa !2
  %arrayidx2.50 = getelementptr inbounds i32, i32* %a, i64 51
  store i32 %.pre, i32* %arrayidx2.50, align 4, !tbaa !2
  %arrayidx2.51 = getelementptr inbounds i32, i32* %a, i64 52
  store i32 %.pre, i32* %arrayidx2.51, align 4, !tbaa !2
  %arrayidx2.52 = getelementptr inbounds i32, i32* %a, i64 53
  store i32 %.pre, i32* %arrayidx2.52, align 4, !tbaa !2
  %arrayidx2.53 = getelementptr inbounds i32, i32* %a, i64 54
  store i32 %.pre, i32* %arrayidx2.53, align 4, !tbaa !2
  %arrayidx2.54 = getelementptr inbounds i32, i32* %a, i64 55
  store i32 %.pre, i32* %arrayidx2.54, align 4, !tbaa !2
  %arrayidx2.55 = getelementptr inbounds i32, i32* %a, i64 56
  store i32 %.pre, i32* %arrayidx2.55, align 4, !tbaa !2
  %arrayidx2.56 = getelementptr inbounds i32, i32* %a, i64 57
  store i32 %.pre, i32* %arrayidx2.56, align 4, !tbaa !2
  %arrayidx2.57 = getelementptr inbounds i32, i32* %a, i64 58
  store i32 %.pre, i32* %arrayidx2.57, align 4, !tbaa !2
  %arrayidx2.58 = getelementptr inbounds i32, i32* %a, i64 59
  store i32 %.pre, i32* %arrayidx2.58, align 4, !tbaa !2
  %arrayidx2.59 = getelementptr inbounds i32, i32* %a, i64 60
  store i32 %.pre, i32* %arrayidx2.59, align 4, !tbaa !2
  %arrayidx2.60 = getelementptr inbounds i32, i32* %a, i64 61
  store i32 %.pre, i32* %arrayidx2.60, align 4, !tbaa !2
  %arrayidx2.61 = getelementptr inbounds i32, i32* %a, i64 62
  store i32 %.pre, i32* %arrayidx2.61, align 4, !tbaa !2
  %arrayidx2.62 = getelementptr inbounds i32, i32* %a, i64 63
  store i32 %.pre, i32* %arrayidx2.62, align 4, !tbaa !2
  %arrayidx2.63 = getelementptr inbounds i32, i32* %a, i64 64
  store i32 %.pre, i32* %arrayidx2.63, align 4, !tbaa !2
  %arrayidx2.64 = getelementptr inbounds i32, i32* %a, i64 65
  store i32 %.pre, i32* %arrayidx2.64, align 4, !tbaa !2
  %arrayidx2.65 = getelementptr inbounds i32, i32* %a, i64 66
  store i32 %.pre, i32* %arrayidx2.65, align 4, !tbaa !2
  %arrayidx2.66 = getelementptr inbounds i32, i32* %a, i64 67
  store i32 %.pre, i32* %arrayidx2.66, align 4, !tbaa !2
  %arrayidx2.67 = getelementptr inbounds i32, i32* %a, i64 68
  store i32 %.pre, i32* %arrayidx2.67, align 4, !tbaa !2
  %arrayidx2.68 = getelementptr inbounds i32, i32* %a, i64 69
  store i32 %.pre, i32* %arrayidx2.68, align 4, !tbaa !2
  %arrayidx2.69 = getelementptr inbounds i32, i32* %a, i64 70
  store i32 %.pre, i32* %arrayidx2.69, align 4, !tbaa !2
  %arrayidx2.70 = getelementptr inbounds i32, i32* %a, i64 71
  store i32 %.pre, i32* %arrayidx2.70, align 4, !tbaa !2
  %arrayidx2.71 = getelementptr inbounds i32, i32* %a, i64 72
  store i32 %.pre, i32* %arrayidx2.71, align 4, !tbaa !2
  %arrayidx2.72 = getelementptr inbounds i32, i32* %a, i64 73
  store i32 %.pre, i32* %arrayidx2.72, align 4, !tbaa !2
  %arrayidx2.73 = getelementptr inbounds i32, i32* %a, i64 74
  store i32 %.pre, i32* %arrayidx2.73, align 4, !tbaa !2
  %arrayidx2.74 = getelementptr inbounds i32, i32* %a, i64 75
  store i32 %.pre, i32* %arrayidx2.74, align 4, !tbaa !2
  %arrayidx2.75 = getelementptr inbounds i32, i32* %a, i64 76
  store i32 %.pre, i32* %arrayidx2.75, align 4, !tbaa !2
  %arrayidx2.76 = getelementptr inbounds i32, i32* %a, i64 77
  store i32 %.pre, i32* %arrayidx2.76, align 4, !tbaa !2
  %arrayidx2.77 = getelementptr inbounds i32, i32* %a, i64 78
  store i32 %.pre, i32* %arrayidx2.77, align 4, !tbaa !2
  %arrayidx2.78 = getelementptr inbounds i32, i32* %a, i64 79
  store i32 %.pre, i32* %arrayidx2.78, align 4, !tbaa !2
  %arrayidx2.79 = getelementptr inbounds i32, i32* %a, i64 80
  store i32 %.pre, i32* %arrayidx2.79, align 4, !tbaa !2
  %arrayidx2.80 = getelementptr inbounds i32, i32* %a, i64 81
  store i32 %.pre, i32* %arrayidx2.80, align 4, !tbaa !2
  %arrayidx2.81 = getelementptr inbounds i32, i32* %a, i64 82
  store i32 %.pre, i32* %arrayidx2.81, align 4, !tbaa !2
  %arrayidx2.82 = getelementptr inbounds i32, i32* %a, i64 83
  store i32 %.pre, i32* %arrayidx2.82, align 4, !tbaa !2
  %arrayidx2.83 = getelementptr inbounds i32, i32* %a, i64 84
  store i32 %.pre, i32* %arrayidx2.83, align 4, !tbaa !2
  %arrayidx2.84 = getelementptr inbounds i32, i32* %a, i64 85
  store i32 %.pre, i32* %arrayidx2.84, align 4, !tbaa !2
  %arrayidx2.85 = getelementptr inbounds i32, i32* %a, i64 86
  store i32 %.pre, i32* %arrayidx2.85, align 4, !tbaa !2
  %arrayidx2.86 = getelementptr inbounds i32, i32* %a, i64 87
  store i32 %.pre, i32* %arrayidx2.86, align 4, !tbaa !2
  %arrayidx2.87 = getelementptr inbounds i32, i32* %a, i64 88
  store i32 %.pre, i32* %arrayidx2.87, align 4, !tbaa !2
  %arrayidx2.88 = getelementptr inbounds i32, i32* %a, i64 89
  store i32 %.pre, i32* %arrayidx2.88, align 4, !tbaa !2
  %arrayidx2.89 = getelementptr inbounds i32, i32* %a, i64 90
  store i32 %.pre, i32* %arrayidx2.89, align 4, !tbaa !2
  %arrayidx2.90 = getelementptr inbounds i32, i32* %a, i64 91
  store i32 %.pre, i32* %arrayidx2.90, align 4, !tbaa !2
  %arrayidx2.91 = getelementptr inbounds i32, i32* %a, i64 92
  store i32 %.pre, i32* %arrayidx2.91, align 4, !tbaa !2
  %arrayidx2.92 = getelementptr inbounds i32, i32* %a, i64 93
  store i32 %.pre, i32* %arrayidx2.92, align 4, !tbaa !2
  %arrayidx2.93 = getelementptr inbounds i32, i32* %a, i64 94
  store i32 %.pre, i32* %arrayidx2.93, align 4, !tbaa !2
  %arrayidx2.94 = getelementptr inbounds i32, i32* %a, i64 95
  store i32 %.pre, i32* %arrayidx2.94, align 4, !tbaa !2
  %arrayidx2.95 = getelementptr inbounds i32, i32* %a, i64 96
  store i32 %.pre, i32* %arrayidx2.95, align 4, !tbaa !2
  %arrayidx2.96 = getelementptr inbounds i32, i32* %a, i64 97
  store i32 %.pre, i32* %arrayidx2.96, align 4, !tbaa !2
  %arrayidx2.97 = getelementptr inbounds i32, i32* %a, i64 98
  store i32 %.pre, i32* %arrayidx2.97, align 4, !tbaa !2
  %arrayidx2.98 = getelementptr inbounds i32, i32* %a, i64 99
  store i32 %.pre, i32* %arrayidx2.98, align 4, !tbaa !2
  %0 = bitcast %"class.std::vector"* %myvec.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #3
  %1 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0
  %_M_impl.i.i.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1, i64 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %_M_impl.i.i.i to %"class.std::allocator"*
  %3 = bitcast %"class.std::allocator"* %2 to %"class.__gnu_cxx::new_allocator"*
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %_M_impl.i.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #3
  br label %for.body.i

for.cond.cleanup.i:                               ; preds = %_ZNSt6vectorIiSaIiEE9push_backERKi.exit.i
  %arrayidx5.i = getelementptr inbounds i32, i32* %a, i64 99
  %5 = load i32, i32* %arrayidx5.i, align 4, !tbaa !2
  %conv.i = sext i32 %5 to i64
  %_M_finish.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast i32** %_M_finish.i.i.i.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !6
  %8 = bitcast %"class.std::vector"* %myvec.i to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !10
  %sub.ptr.sub.i.i.i.i = sub i64 %7, %9
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i
  br i1 %cmp.i.i.i, label %_ZNSt6vectorIiSaIiEE2atEm.exit.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %for.cond.cleanup.i
  %_M_finish.i1.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i32** %_M_finish.i1.i.i.i to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !6
  %12 = bitcast %"class.std::vector"* %myvec.i to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !10
  %sub.ptr.sub.i2.i.i.i = sub i64 %11, %13
  %sub.ptr.div.i3.i.i.i = ashr exact i64 %sub.ptr.sub.i2.i.i.i, 2
  invoke void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i64 %conv.i, i64 %sub.ptr.div.i3.i.i.i) #12
          to label %.noexc.i unwind label %lpad6.i

.noexc.i:                                         ; preds = %if.then.i.i.i
  unreachable

_ZNSt6vectorIiSaIiEE2atEm.exit.i:                 ; preds = %for.cond.cleanup.i
  %_M_start.i.i1.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %_M_start.i.i1.i, align 8, !tbaa !10
  %add.ptr.i.i.i = getelementptr inbounds i32, i32* %14, i64 %conv.i
  %15 = load i32, i32* %add.ptr.i.i.i, align 4, !tbaa !2
  %16 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0
  %_M_start.i16.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 0
  %17 = load i32*, i32** %_M_start.i16.i, align 8, !tbaa !10
  %_M_finish.i17.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 1
  %18 = load i32*, i32** %_M_finish.i17.i, align 8, !tbaa !6
  %19 = bitcast %"struct.std::_Vector_base"* %16 to %"class.std::allocator"*
  %_M_start.i.i18.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i64 0, i32 0, i32 0
  %20 = load i32*, i32** %_M_start.i.i18.i, align 8, !tbaa !10
  %_M_end_of_storage.i.i19.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i64 0, i32 0, i32 2
  %21 = bitcast i32** %_M_end_of_storage.i.i19.i to i64*
  %22 = load i64, i64* %21, align 8, !tbaa !11
  %sub.ptr.rhs.cast.i.i20.i = ptrtoint i32* %20 to i64
  %sub.ptr.sub.i.i21.i = sub i64 %22, %sub.ptr.rhs.cast.i.i20.i
  %sub.ptr.div.i.i22.i = ashr exact i64 %sub.ptr.sub.i.i21.i, 2
  %tobool.i.i.i23.i = icmp eq i32* %20, null
  br i1 %tobool.i.i.i23.i, label %_Z6helperiPi.exit, label %if.then.i.i.i24.i

for.body.i:                                       ; preds = %_ZNSt6vectorIiSaIiEE9push_backERKi.exit.i, %entry
  %indvars.iv.i = phi i64 [ 1, %entry ], [ %indvars.iv.next.i, %_ZNSt6vectorIiSaIiEE9push_backERKi.exit.i ]
  %23 = add nsw i64 %indvars.iv.i, -1
  %arrayidx.i = getelementptr inbounds i32, i32* %a, i64 %23
  %24 = load i32, i32* %arrayidx.i, align 4, !tbaa !2
  %mul.i = shl nsw i32 %24, 1
  %arrayidx2.i = getelementptr inbounds i32, i32* %a, i64 %indvars.iv.i
  store i32 %mul.i, i32* %arrayidx2.i, align 4, !tbaa !2
  %_M_finish.i2.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 1
  %25 = load i32*, i32** %_M_finish.i2.i, align 8, !tbaa !6
  %_M_end_of_storage.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 2
  %26 = load i32*, i32** %_M_end_of_storage.i.i, align 8, !tbaa !11
  %cmp.i.i = icmp eq i32* %25, %26
  br i1 %cmp.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.body.i
  %27 = bitcast %"class.std::vector"* %myvec.i to %"class.std::allocator"*
  %28 = bitcast %"class.std::allocator"* %27 to %"class.__gnu_cxx::new_allocator"*
  %29 = load i32, i32* %arrayidx2.i, align 4, !tbaa !2
  store i32 %29, i32* %25, align 4, !tbaa !2
  %30 = load i32*, i32** %_M_finish.i2.i, align 8, !tbaa !6
  %incdec.ptr.i.i = getelementptr inbounds i32, i32* %30, i64 1
  store i32* %incdec.ptr.i.i, i32** %_M_finish.i2.i, align 8, !tbaa !6
  br label %_ZNSt6vectorIiSaIiEE9push_backERKi.exit.i

if.else.i.i:                                      ; preds = %for.body.i
  %31 = bitcast i64* %__n.addr.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31)
  store i64 1, i64* %__n.addr.i.i.i.i, align 8, !tbaa !12
  %32 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base"* %32 to %"class.std::allocator"*
  %34 = bitcast %"class.std::allocator"* %33 to %"class.__gnu_cxx::new_allocator"*
  %_M_finish.i7.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast i32** %_M_finish.i7.i.i.i.i to i64*
  %36 = load i64, i64* %35, align 8, !tbaa !6
  %37 = bitcast %"class.std::vector"* %myvec.i to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !10
  %sub.ptr.sub.i8.i.i.i.i = sub i64 %36, %38
  %sub.ptr.div.i9.i.i.i.i = ashr exact i64 %sub.ptr.sub.i8.i.i.i.i, 2
  %sub.i.i.i.i = sub i64 4611686018427387903, %sub.ptr.div.i9.i.i.i.i
  %cmp.i.i.i.i = icmp ult i64 %sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i3.i, label %if.end.i.i.i.i

if.then.i.i.i3.i:                                 ; preds = %if.else.i.i
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #12
          to label %.noexc13.i unwind label %lpad.i

.noexc13.i:                                       ; preds = %if.then.i.i.i3.i
  unreachable

if.end.i.i.i.i:                                   ; preds = %if.else.i.i
  %_M_finish.i4.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast i32** %_M_finish.i4.i.i.i.i to i64*
  %40 = load i64, i64* %39, align 8, !tbaa !6
  %41 = bitcast %"class.std::vector"* %myvec.i to i64*
  %42 = load i64, i64* %41, align 8, !tbaa !10
  %sub.ptr.sub.i5.i.i.i.i = sub i64 %40, %42
  %sub.ptr.div.i6.i.i.i.i = ashr exact i64 %sub.ptr.sub.i5.i.i.i.i, 2
  %43 = bitcast i64* %ref.tmp.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #3
  %_M_finish.i1.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 1
  %44 = bitcast i32** %_M_finish.i1.i.i.i.i to i64*
  %45 = load i64, i64* %44, align 8, !tbaa !6
  %46 = bitcast %"class.std::vector"* %myvec.i to i64*
  %47 = load i64, i64* %46, align 8, !tbaa !10
  %sub.ptr.sub.i2.i.i.i.i = sub i64 %45, %47
  %sub.ptr.div.i3.i.i.i.i = ashr exact i64 %sub.ptr.sub.i2.i.i.i.i, 2
  store i64 %sub.ptr.div.i3.i.i.i.i, i64* %ref.tmp.i.i.i.i, align 8, !tbaa !12
  %48 = load i64, i64* %ref.tmp.i.i.i.i, align 8, !tbaa !12
  %49 = load i64, i64* %__n.addr.i.i.i.i, align 8, !tbaa !12
  %cmp.i.i.i.i.i = icmp ult i64 %48, %49
  %__b.__a.i.i.i.i.i = select i1 %cmp.i.i.i.i.i, i64* %__n.addr.i.i.i.i, i64* %ref.tmp.i.i.i.i
  %50 = load i64, i64* %__b.__a.i.i.i.i.i, align 8, !tbaa !12
  %add.i.i.i.i = add i64 %50, %sub.ptr.div.i6.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #3
  %_M_finish.i.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 1
  %51 = bitcast i32** %_M_finish.i.i.i.i.i to i64*
  %52 = load i64, i64* %51, align 8, !tbaa !6
  %53 = bitcast %"class.std::vector"* %myvec.i to i64*
  %54 = load i64, i64* %53, align 8, !tbaa !10
  %sub.ptr.sub.i.i.i.i.i = sub i64 %52, %54
  %sub.ptr.div.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i, 2
  %cmp7.i.i.i.i = icmp ult i64 %add.i.i.i.i, %sub.ptr.div.i.i.i.i.i
  br i1 %cmp7.i.i.i.i, label %cond.true.i.i.i.i, label %lor.lhs.false.i.i.i.i

lor.lhs.false.i.i.i.i:                            ; preds = %if.end.i.i.i.i
  %55 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base"* %55 to %"class.std::allocator"*
  %57 = bitcast %"class.std::allocator"* %56 to %"class.__gnu_cxx::new_allocator"*
  %cmp9.i.i.i.i = icmp ugt i64 %add.i.i.i.i, 4611686018427387903
  br i1 %cmp9.i.i.i.i, label %cond.true.i.i.i.i, label %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i

cond.true.i.i.i.i:                                ; preds = %lor.lhs.false.i.i.i.i, %if.end.i.i.i.i
  %58 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base"* %58 to %"class.std::allocator"*
  %60 = bitcast %"class.std::allocator"* %59 to %"class.__gnu_cxx::new_allocator"*
  br label %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i

_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i: ; preds = %cond.true.i.i.i.i, %lor.lhs.false.i.i.i.i
  %cond.i.i.i.i = phi i64 [ 4611686018427387903, %cond.true.i.i.i.i ], [ %add.i.i.i.i, %lor.lhs.false.i.i.i.i ]
  %61 = bitcast i64* %__n.addr.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61)
  %62 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0
  %cmp.i1.i.i.i = icmp eq i64 %cond.i.i.i.i, 0
  br i1 %cmp.i1.i.i.i, label %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i.i, label %cond.true.i2.i.i.i

cond.true.i2.i.i.i:                               ; preds = %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i
  %63 = bitcast %"struct.std::_Vector_base"* %62 to %"class.std::allocator"*
  %64 = bitcast %"class.std::allocator"* %63 to %"class.__gnu_cxx::new_allocator"*
  %cmp.i.i.i.i.i.i = icmp ult i64 4611686018427387903, %cond.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %cond.true.i2.i.i.i
  invoke void @_ZSt17__throw_bad_allocv() #12
          to label %.noexc14.i unwind label %lpad.i

.noexc14.i:                                       ; preds = %if.then.i.i.i.i.i.i
  unreachable

_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i: ; preds = %cond.true.i2.i.i.i
  %mul.i.i.i.i.i.i = shl i64 %cond.i.i.i.i, 2
  %call2.i.i.i.i.i15.i = invoke i8* @_Znwm(i64 %mul.i.i.i.i.i.i)
          to label %call2.i.i.i.i.i.noexc.i unwind label %lpad.i

call2.i.i.i.i.i.noexc.i:                          ; preds = %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i
  %65 = bitcast i8* %call2.i.i.i.i.i15.i to i32*
  br label %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i.i

_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i.i: ; preds = %call2.i.i.i.i.i.noexc.i, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i
  %cond.i3.i.i.i = phi i32* [ %65, %call2.i.i.i.i.i.noexc.i ], [ null, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i ]
  %66 = bitcast %"class.std::vector"* %myvec.i to %"class.std::allocator"*
  %_M_finish.i.i.i4.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 1
  %67 = bitcast i32** %_M_finish.i.i.i4.i to i64*
  %68 = load i64, i64* %67, align 8, !tbaa !6
  %69 = bitcast %"class.std::vector"* %myvec.i to i64*
  %70 = load i64, i64* %69, align 8, !tbaa !10
  %sub.ptr.sub.i.i.i5.i = sub i64 %68, %70
  %sub.ptr.div.i.i.i6.i = ashr exact i64 %sub.ptr.sub.i.i.i5.i, 2
  %add.ptr.i.i7.i = getelementptr inbounds i32, i32* %cond.i3.i.i.i, i64 %sub.ptr.div.i.i.i6.i
  %71 = bitcast %"class.std::allocator"* %66 to %"class.__gnu_cxx::new_allocator"*
  %72 = load i32, i32* %arrayidx2.i, align 4, !tbaa !2
  store i32 %72, i32* %add.ptr.i.i7.i, align 4, !tbaa !2
  %_M_start.i.i8.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 0
  %73 = load i32*, i32** %_M_start.i.i8.i, align 8, !tbaa !10
  %_M_finish.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 1
  %74 = load i32*, i32** %_M_finish.i.i.i, align 8, !tbaa !6
  %75 = bitcast %"struct.std::_Vector_base"* %62 to %"class.std::allocator"*
  %76 = bitcast %"class.std::move_iterator"* %retval.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76)
  %_M_current.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i.i.i.i.i, i64 0, i32 0
  store i32* %73, i32** %_M_current.i.i.i.i.i.i, align 8, !tbaa !14
  %coerce.dive.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i.i.i.i.i, i64 0, i32 0
  %77 = load i32*, i32** %coerce.dive.i.i.i.i.i, align 8
  %78 = bitcast %"class.std::move_iterator"* %retval.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %78)
  %79 = bitcast %"class.std::move_iterator"* %retval.i1.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %79)
  %_M_current.i.i2.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i1.i.i.i.i, i64 0, i32 0
  store i32* %74, i32** %_M_current.i.i2.i.i.i.i, align 8, !tbaa !14
  %coerce.dive.i3.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i1.i.i.i.i, i64 0, i32 0
  %80 = load i32*, i32** %coerce.dive.i3.i.i.i.i, align 8
  %81 = bitcast %"class.std::move_iterator"* %retval.i1.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %81)
  %82 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %82)
  %coerce.dive.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i.i.i, i64 0, i32 0
  store i32* %77, i32** %coerce.dive.i.i.i.i.i.i.i.i.i.i, align 8
  %_M_current.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i.i.i, i64 0, i32 0
  %83 = load i32*, i32** %_M_current.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !14
  %84 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84)
  %85 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %85)
  %coerce.dive.i.i2.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i.i.i, i64 0, i32 0
  store i32* %80, i32** %coerce.dive.i.i2.i.i.i.i.i.i.i.i, align 8
  %_M_current.i.i.i3.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i.i.i, i64 0, i32 0
  %86 = load i32*, i32** %_M_current.i.i.i3.i.i.i.i.i.i.i.i, align 8, !tbaa !14
  %87 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87)
  %sub.ptr.lhs.cast.i.i.i.i.i.i.i.i.i.i.i = ptrtoint i32* %86 to i64
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i.i.i.i = ptrtoint i32* %83 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i.i.i.i.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i.i, 2
  %tobool.i.i.i.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i.i.i, label %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i.i, label %if.then.i.i.i.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i.i.i.i:                    ; preds = %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i.i
  %88 = bitcast i32* %cond.i3.i.i.i to i8*
  %89 = bitcast i32* %83 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %89, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i.i, i1 false) #3
  br label %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i.i

_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i.i: ; preds = %if.then.i.i.i.i.i.i.i.i.i.i.i, %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i.i
  %add.ptr.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %cond.i3.i.i.i, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i.i.i
  %incdec.ptr.i.i.i = getelementptr inbounds i32, i32* %add.ptr.i.i.i.i.i.i.i.i.i.i.i, i64 1
  %90 = load i32*, i32** %_M_start.i.i8.i, align 8, !tbaa !10
  %91 = load i32*, i32** %_M_finish.i.i.i, align 8, !tbaa !6
  %92 = bitcast %"struct.std::_Vector_base"* %62 to %"class.std::allocator"*
  %93 = load i32*, i32** %_M_start.i.i8.i, align 8, !tbaa !10
  %_M_end_of_storage.i.i9.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 2
  %94 = bitcast i32** %_M_end_of_storage.i.i9.i to i64*
  %95 = load i64, i64* %94, align 8, !tbaa !11
  %sub.ptr.rhs.cast.i.i10.i = ptrtoint i32* %93 to i64
  %sub.ptr.sub.i.i11.i = sub i64 %95, %sub.ptr.rhs.cast.i.i10.i
  %sub.ptr.div.i.i12.i = ashr exact i64 %sub.ptr.sub.i.i11.i, 2
  %tobool.i9.i.i.i = icmp eq i32* %93, null
  br i1 %tobool.i9.i.i.i, label %_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit.i.i, label %if.then.i10.i.i.i

if.then.i10.i.i.i:                                ; preds = %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i.i
  %96 = bitcast %"struct.std::_Vector_base"* %62 to %"class.std::allocator"*
  %97 = bitcast %"class.std::allocator"* %96 to %"class.__gnu_cxx::new_allocator"*
  %98 = bitcast i32* %93 to i8*
  call void @_ZdlPv(i8* %98) #3
  br label %_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit.i.i

_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit.i.i: ; preds = %if.then.i10.i.i.i, %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i.i
  store i32* %cond.i3.i.i.i, i32** %_M_start.i.i8.i, align 8, !tbaa !10
  store i32* %incdec.ptr.i.i.i, i32** %_M_finish.i.i.i, align 8, !tbaa !6
  %add.ptr33.i.i.i = getelementptr inbounds i32, i32* %cond.i3.i.i.i, i64 %cond.i.i.i.i
  store i32* %add.ptr33.i.i.i, i32** %_M_end_of_storage.i.i9.i, align 8, !tbaa !11
  br label %_ZNSt6vectorIiSaIiEE9push_backERKi.exit.i

_ZNSt6vectorIiSaIiEE9push_backERKi.exit.i:        ; preds = %_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit.i.i, %if.then.i.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp.i = icmp ult i64 %indvars.iv.next.i, 100
  br i1 %cmp.i, label %for.body.i, label %for.cond.cleanup.i

lpad.i:                                           ; preds = %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i, %if.then.i.i.i.i.i.i, %if.then.i.i.i3.i
  %99 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup.i

if.then.i.i.i24.i:                                ; preds = %_ZNSt6vectorIiSaIiEE2atEm.exit.i
  %100 = bitcast %"struct.std::_Vector_base"* %16 to %"class.std::allocator"*
  %101 = bitcast %"class.std::allocator"* %100 to %"class.__gnu_cxx::new_allocator"*
  %102 = bitcast i32* %20 to i8*
  call void @_ZdlPv(i8* %102) #3
  br label %_Z6helperiPi.exit

lpad6.i:                                          ; preds = %if.then.i.i.i
  %103 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup.i

ehcleanup.i:                                      ; preds = %lpad6.i, %lpad.i
  %.sink21.i = phi { i8*, i32 } [ %103, %lpad6.i ], [ %99, %lpad.i ]
  %104 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0
  %_M_start.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 0
  %105 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !10
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i, i64 0, i32 0, i32 0, i32 1
  %106 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !6
  %107 = bitcast %"struct.std::_Vector_base"* %104 to %"class.std::allocator"*
  %_M_start.i.i.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %104, i64 0, i32 0, i32 0
  %108 = load i32*, i32** %_M_start.i.i.i, align 8, !tbaa !10
  %_M_end_of_storage.i.i.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %104, i64 0, i32 0, i32 2
  %109 = bitcast i32** %_M_end_of_storage.i.i.i to i64*
  %110 = load i64, i64* %109, align 8, !tbaa !11
  %sub.ptr.rhs.cast.i.i.i = ptrtoint i32* %108 to i64
  %sub.ptr.sub.i.i.i = sub i64 %110, %sub.ptr.rhs.cast.i.i.i
  %sub.ptr.div.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i, 2
  %tobool.i.i.i.i = icmp eq i32* %108, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIiSaIiEED2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %ehcleanup.i
  %111 = bitcast %"struct.std::_Vector_base"* %104 to %"class.std::allocator"*
  %112 = bitcast %"class.std::allocator"* %111 to %"class.__gnu_cxx::new_allocator"*
  %113 = bitcast i32* %108 to i8*
  call void @_ZdlPv(i8* %113) #3
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit.i

_ZNSt6vectorIiSaIiEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %ehcleanup.i
  %114 = bitcast %"struct.std::_Vector_base"* %104 to %"class.__gnu_cxx::new_allocator"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #3
  resume { i8*, i32 } %.sink21.i

_Z6helperiPi.exit:                                ; preds = %_ZNSt6vectorIiSaIiEE2atEm.exit.i, %if.then.i.i.i24.i
  %115 = bitcast %"struct.std::_Vector_base"* %16 to %"class.__gnu_cxx::new_allocator"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #3
  %arrayidx3 = getelementptr inbounds i32, i32* %a, i64 99
  %116 = load i32, i32* %arrayidx3, align 4, !tbaa !2
  ret i32 %116
}

; Function Attrs: noinline uwtable
define dso_local void @_Z17_kernel_testbenchPi(i32* %a) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %retval.i1.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i1.i.i.i.i.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i.i.i.i.i.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %retval.i.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %__n.addr.i.i.i.i.i = alloca i64, align 8
  %ref.tmp.i.i.i.i.i = alloca i64, align 8
  %myvec.i.i = alloca %"class.std::vector", align 8
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  %.pre.i = load i32, i32* %a, align 4, !tbaa !2
  %arrayidx2.i = getelementptr inbounds i32, i32* %a, i64 1
  store i32 %.pre.i, i32* %arrayidx2.i, align 4, !tbaa !2
  %arrayidx2.1.i = getelementptr inbounds i32, i32* %a, i64 2
  store i32 %.pre.i, i32* %arrayidx2.1.i, align 4, !tbaa !2
  %arrayidx2.2.i = getelementptr inbounds i32, i32* %a, i64 3
  store i32 %.pre.i, i32* %arrayidx2.2.i, align 4, !tbaa !2
  %arrayidx2.3.i = getelementptr inbounds i32, i32* %a, i64 4
  store i32 %.pre.i, i32* %arrayidx2.3.i, align 4, !tbaa !2
  %arrayidx2.4.i = getelementptr inbounds i32, i32* %a, i64 5
  store i32 %.pre.i, i32* %arrayidx2.4.i, align 4, !tbaa !2
  %arrayidx2.5.i = getelementptr inbounds i32, i32* %a, i64 6
  store i32 %.pre.i, i32* %arrayidx2.5.i, align 4, !tbaa !2
  %arrayidx2.6.i = getelementptr inbounds i32, i32* %a, i64 7
  store i32 %.pre.i, i32* %arrayidx2.6.i, align 4, !tbaa !2
  %arrayidx2.7.i = getelementptr inbounds i32, i32* %a, i64 8
  store i32 %.pre.i, i32* %arrayidx2.7.i, align 4, !tbaa !2
  %arrayidx2.8.i = getelementptr inbounds i32, i32* %a, i64 9
  store i32 %.pre.i, i32* %arrayidx2.8.i, align 4, !tbaa !2
  %arrayidx2.9.i = getelementptr inbounds i32, i32* %a, i64 10
  store i32 %.pre.i, i32* %arrayidx2.9.i, align 4, !tbaa !2
  %arrayidx2.10.i = getelementptr inbounds i32, i32* %a, i64 11
  store i32 %.pre.i, i32* %arrayidx2.10.i, align 4, !tbaa !2
  %arrayidx2.11.i = getelementptr inbounds i32, i32* %a, i64 12
  store i32 %.pre.i, i32* %arrayidx2.11.i, align 4, !tbaa !2
  %arrayidx2.12.i = getelementptr inbounds i32, i32* %a, i64 13
  store i32 %.pre.i, i32* %arrayidx2.12.i, align 4, !tbaa !2
  %arrayidx2.13.i = getelementptr inbounds i32, i32* %a, i64 14
  store i32 %.pre.i, i32* %arrayidx2.13.i, align 4, !tbaa !2
  %arrayidx2.14.i = getelementptr inbounds i32, i32* %a, i64 15
  store i32 %.pre.i, i32* %arrayidx2.14.i, align 4, !tbaa !2
  %arrayidx2.15.i = getelementptr inbounds i32, i32* %a, i64 16
  store i32 %.pre.i, i32* %arrayidx2.15.i, align 4, !tbaa !2
  %arrayidx2.16.i = getelementptr inbounds i32, i32* %a, i64 17
  store i32 %.pre.i, i32* %arrayidx2.16.i, align 4, !tbaa !2
  %arrayidx2.17.i = getelementptr inbounds i32, i32* %a, i64 18
  store i32 %.pre.i, i32* %arrayidx2.17.i, align 4, !tbaa !2
  %arrayidx2.18.i = getelementptr inbounds i32, i32* %a, i64 19
  store i32 %.pre.i, i32* %arrayidx2.18.i, align 4, !tbaa !2
  %arrayidx2.19.i = getelementptr inbounds i32, i32* %a, i64 20
  store i32 %.pre.i, i32* %arrayidx2.19.i, align 4, !tbaa !2
  %arrayidx2.20.i = getelementptr inbounds i32, i32* %a, i64 21
  store i32 %.pre.i, i32* %arrayidx2.20.i, align 4, !tbaa !2
  %arrayidx2.21.i = getelementptr inbounds i32, i32* %a, i64 22
  store i32 %.pre.i, i32* %arrayidx2.21.i, align 4, !tbaa !2
  %arrayidx2.22.i = getelementptr inbounds i32, i32* %a, i64 23
  store i32 %.pre.i, i32* %arrayidx2.22.i, align 4, !tbaa !2
  %arrayidx2.23.i = getelementptr inbounds i32, i32* %a, i64 24
  store i32 %.pre.i, i32* %arrayidx2.23.i, align 4, !tbaa !2
  %arrayidx2.24.i = getelementptr inbounds i32, i32* %a, i64 25
  store i32 %.pre.i, i32* %arrayidx2.24.i, align 4, !tbaa !2
  %arrayidx2.25.i = getelementptr inbounds i32, i32* %a, i64 26
  store i32 %.pre.i, i32* %arrayidx2.25.i, align 4, !tbaa !2
  %arrayidx2.26.i = getelementptr inbounds i32, i32* %a, i64 27
  store i32 %.pre.i, i32* %arrayidx2.26.i, align 4, !tbaa !2
  %arrayidx2.27.i = getelementptr inbounds i32, i32* %a, i64 28
  store i32 %.pre.i, i32* %arrayidx2.27.i, align 4, !tbaa !2
  %arrayidx2.28.i = getelementptr inbounds i32, i32* %a, i64 29
  store i32 %.pre.i, i32* %arrayidx2.28.i, align 4, !tbaa !2
  %arrayidx2.29.i = getelementptr inbounds i32, i32* %a, i64 30
  store i32 %.pre.i, i32* %arrayidx2.29.i, align 4, !tbaa !2
  %arrayidx2.30.i = getelementptr inbounds i32, i32* %a, i64 31
  store i32 %.pre.i, i32* %arrayidx2.30.i, align 4, !tbaa !2
  %arrayidx2.31.i = getelementptr inbounds i32, i32* %a, i64 32
  store i32 %.pre.i, i32* %arrayidx2.31.i, align 4, !tbaa !2
  %arrayidx2.32.i = getelementptr inbounds i32, i32* %a, i64 33
  store i32 %.pre.i, i32* %arrayidx2.32.i, align 4, !tbaa !2
  %arrayidx2.33.i = getelementptr inbounds i32, i32* %a, i64 34
  store i32 %.pre.i, i32* %arrayidx2.33.i, align 4, !tbaa !2
  %arrayidx2.34.i = getelementptr inbounds i32, i32* %a, i64 35
  store i32 %.pre.i, i32* %arrayidx2.34.i, align 4, !tbaa !2
  %arrayidx2.35.i = getelementptr inbounds i32, i32* %a, i64 36
  store i32 %.pre.i, i32* %arrayidx2.35.i, align 4, !tbaa !2
  %arrayidx2.36.i = getelementptr inbounds i32, i32* %a, i64 37
  store i32 %.pre.i, i32* %arrayidx2.36.i, align 4, !tbaa !2
  %arrayidx2.37.i = getelementptr inbounds i32, i32* %a, i64 38
  store i32 %.pre.i, i32* %arrayidx2.37.i, align 4, !tbaa !2
  %arrayidx2.38.i = getelementptr inbounds i32, i32* %a, i64 39
  store i32 %.pre.i, i32* %arrayidx2.38.i, align 4, !tbaa !2
  %arrayidx2.39.i = getelementptr inbounds i32, i32* %a, i64 40
  store i32 %.pre.i, i32* %arrayidx2.39.i, align 4, !tbaa !2
  %arrayidx2.40.i = getelementptr inbounds i32, i32* %a, i64 41
  store i32 %.pre.i, i32* %arrayidx2.40.i, align 4, !tbaa !2
  %arrayidx2.41.i = getelementptr inbounds i32, i32* %a, i64 42
  store i32 %.pre.i, i32* %arrayidx2.41.i, align 4, !tbaa !2
  %arrayidx2.42.i = getelementptr inbounds i32, i32* %a, i64 43
  store i32 %.pre.i, i32* %arrayidx2.42.i, align 4, !tbaa !2
  %arrayidx2.43.i = getelementptr inbounds i32, i32* %a, i64 44
  store i32 %.pre.i, i32* %arrayidx2.43.i, align 4, !tbaa !2
  %arrayidx2.44.i = getelementptr inbounds i32, i32* %a, i64 45
  store i32 %.pre.i, i32* %arrayidx2.44.i, align 4, !tbaa !2
  %arrayidx2.45.i = getelementptr inbounds i32, i32* %a, i64 46
  store i32 %.pre.i, i32* %arrayidx2.45.i, align 4, !tbaa !2
  %arrayidx2.46.i = getelementptr inbounds i32, i32* %a, i64 47
  store i32 %.pre.i, i32* %arrayidx2.46.i, align 4, !tbaa !2
  %arrayidx2.47.i = getelementptr inbounds i32, i32* %a, i64 48
  store i32 %.pre.i, i32* %arrayidx2.47.i, align 4, !tbaa !2
  %arrayidx2.48.i = getelementptr inbounds i32, i32* %a, i64 49
  store i32 %.pre.i, i32* %arrayidx2.48.i, align 4, !tbaa !2
  %arrayidx2.49.i = getelementptr inbounds i32, i32* %a, i64 50
  store i32 %.pre.i, i32* %arrayidx2.49.i, align 4, !tbaa !2
  %arrayidx2.50.i = getelementptr inbounds i32, i32* %a, i64 51
  store i32 %.pre.i, i32* %arrayidx2.50.i, align 4, !tbaa !2
  %arrayidx2.51.i = getelementptr inbounds i32, i32* %a, i64 52
  store i32 %.pre.i, i32* %arrayidx2.51.i, align 4, !tbaa !2
  %arrayidx2.52.i = getelementptr inbounds i32, i32* %a, i64 53
  store i32 %.pre.i, i32* %arrayidx2.52.i, align 4, !tbaa !2
  %arrayidx2.53.i = getelementptr inbounds i32, i32* %a, i64 54
  store i32 %.pre.i, i32* %arrayidx2.53.i, align 4, !tbaa !2
  %arrayidx2.54.i = getelementptr inbounds i32, i32* %a, i64 55
  store i32 %.pre.i, i32* %arrayidx2.54.i, align 4, !tbaa !2
  %arrayidx2.55.i = getelementptr inbounds i32, i32* %a, i64 56
  store i32 %.pre.i, i32* %arrayidx2.55.i, align 4, !tbaa !2
  %arrayidx2.56.i = getelementptr inbounds i32, i32* %a, i64 57
  store i32 %.pre.i, i32* %arrayidx2.56.i, align 4, !tbaa !2
  %arrayidx2.57.i = getelementptr inbounds i32, i32* %a, i64 58
  store i32 %.pre.i, i32* %arrayidx2.57.i, align 4, !tbaa !2
  %arrayidx2.58.i = getelementptr inbounds i32, i32* %a, i64 59
  store i32 %.pre.i, i32* %arrayidx2.58.i, align 4, !tbaa !2
  %arrayidx2.59.i = getelementptr inbounds i32, i32* %a, i64 60
  store i32 %.pre.i, i32* %arrayidx2.59.i, align 4, !tbaa !2
  %arrayidx2.60.i = getelementptr inbounds i32, i32* %a, i64 61
  store i32 %.pre.i, i32* %arrayidx2.60.i, align 4, !tbaa !2
  %arrayidx2.61.i = getelementptr inbounds i32, i32* %a, i64 62
  store i32 %.pre.i, i32* %arrayidx2.61.i, align 4, !tbaa !2
  %arrayidx2.62.i = getelementptr inbounds i32, i32* %a, i64 63
  store i32 %.pre.i, i32* %arrayidx2.62.i, align 4, !tbaa !2
  %arrayidx2.63.i = getelementptr inbounds i32, i32* %a, i64 64
  store i32 %.pre.i, i32* %arrayidx2.63.i, align 4, !tbaa !2
  %arrayidx2.64.i = getelementptr inbounds i32, i32* %a, i64 65
  store i32 %.pre.i, i32* %arrayidx2.64.i, align 4, !tbaa !2
  %arrayidx2.65.i = getelementptr inbounds i32, i32* %a, i64 66
  store i32 %.pre.i, i32* %arrayidx2.65.i, align 4, !tbaa !2
  %arrayidx2.66.i = getelementptr inbounds i32, i32* %a, i64 67
  store i32 %.pre.i, i32* %arrayidx2.66.i, align 4, !tbaa !2
  %arrayidx2.67.i = getelementptr inbounds i32, i32* %a, i64 68
  store i32 %.pre.i, i32* %arrayidx2.67.i, align 4, !tbaa !2
  %arrayidx2.68.i = getelementptr inbounds i32, i32* %a, i64 69
  store i32 %.pre.i, i32* %arrayidx2.68.i, align 4, !tbaa !2
  %arrayidx2.69.i = getelementptr inbounds i32, i32* %a, i64 70
  store i32 %.pre.i, i32* %arrayidx2.69.i, align 4, !tbaa !2
  %arrayidx2.70.i = getelementptr inbounds i32, i32* %a, i64 71
  store i32 %.pre.i, i32* %arrayidx2.70.i, align 4, !tbaa !2
  %arrayidx2.71.i = getelementptr inbounds i32, i32* %a, i64 72
  store i32 %.pre.i, i32* %arrayidx2.71.i, align 4, !tbaa !2
  %arrayidx2.72.i = getelementptr inbounds i32, i32* %a, i64 73
  store i32 %.pre.i, i32* %arrayidx2.72.i, align 4, !tbaa !2
  %arrayidx2.73.i = getelementptr inbounds i32, i32* %a, i64 74
  store i32 %.pre.i, i32* %arrayidx2.73.i, align 4, !tbaa !2
  %arrayidx2.74.i = getelementptr inbounds i32, i32* %a, i64 75
  store i32 %.pre.i, i32* %arrayidx2.74.i, align 4, !tbaa !2
  %arrayidx2.75.i = getelementptr inbounds i32, i32* %a, i64 76
  store i32 %.pre.i, i32* %arrayidx2.75.i, align 4, !tbaa !2
  %arrayidx2.76.i = getelementptr inbounds i32, i32* %a, i64 77
  store i32 %.pre.i, i32* %arrayidx2.76.i, align 4, !tbaa !2
  %arrayidx2.77.i = getelementptr inbounds i32, i32* %a, i64 78
  store i32 %.pre.i, i32* %arrayidx2.77.i, align 4, !tbaa !2
  %arrayidx2.78.i = getelementptr inbounds i32, i32* %a, i64 79
  store i32 %.pre.i, i32* %arrayidx2.78.i, align 4, !tbaa !2
  %arrayidx2.79.i = getelementptr inbounds i32, i32* %a, i64 80
  store i32 %.pre.i, i32* %arrayidx2.79.i, align 4, !tbaa !2
  %arrayidx2.80.i = getelementptr inbounds i32, i32* %a, i64 81
  store i32 %.pre.i, i32* %arrayidx2.80.i, align 4, !tbaa !2
  %arrayidx2.81.i = getelementptr inbounds i32, i32* %a, i64 82
  store i32 %.pre.i, i32* %arrayidx2.81.i, align 4, !tbaa !2
  %arrayidx2.82.i = getelementptr inbounds i32, i32* %a, i64 83
  store i32 %.pre.i, i32* %arrayidx2.82.i, align 4, !tbaa !2
  %arrayidx2.83.i = getelementptr inbounds i32, i32* %a, i64 84
  store i32 %.pre.i, i32* %arrayidx2.83.i, align 4, !tbaa !2
  %arrayidx2.84.i = getelementptr inbounds i32, i32* %a, i64 85
  store i32 %.pre.i, i32* %arrayidx2.84.i, align 4, !tbaa !2
  %arrayidx2.85.i = getelementptr inbounds i32, i32* %a, i64 86
  store i32 %.pre.i, i32* %arrayidx2.85.i, align 4, !tbaa !2
  %arrayidx2.86.i = getelementptr inbounds i32, i32* %a, i64 87
  store i32 %.pre.i, i32* %arrayidx2.86.i, align 4, !tbaa !2
  %arrayidx2.87.i = getelementptr inbounds i32, i32* %a, i64 88
  store i32 %.pre.i, i32* %arrayidx2.87.i, align 4, !tbaa !2
  %arrayidx2.88.i = getelementptr inbounds i32, i32* %a, i64 89
  store i32 %.pre.i, i32* %arrayidx2.88.i, align 4, !tbaa !2
  %arrayidx2.89.i = getelementptr inbounds i32, i32* %a, i64 90
  store i32 %.pre.i, i32* %arrayidx2.89.i, align 4, !tbaa !2
  %arrayidx2.90.i = getelementptr inbounds i32, i32* %a, i64 91
  store i32 %.pre.i, i32* %arrayidx2.90.i, align 4, !tbaa !2
  %arrayidx2.91.i = getelementptr inbounds i32, i32* %a, i64 92
  store i32 %.pre.i, i32* %arrayidx2.91.i, align 4, !tbaa !2
  %arrayidx2.92.i = getelementptr inbounds i32, i32* %a, i64 93
  store i32 %.pre.i, i32* %arrayidx2.92.i, align 4, !tbaa !2
  %arrayidx2.93.i = getelementptr inbounds i32, i32* %a, i64 94
  store i32 %.pre.i, i32* %arrayidx2.93.i, align 4, !tbaa !2
  %arrayidx2.94.i = getelementptr inbounds i32, i32* %a, i64 95
  store i32 %.pre.i, i32* %arrayidx2.94.i, align 4, !tbaa !2
  %arrayidx2.95.i = getelementptr inbounds i32, i32* %a, i64 96
  store i32 %.pre.i, i32* %arrayidx2.95.i, align 4, !tbaa !2
  %arrayidx2.96.i = getelementptr inbounds i32, i32* %a, i64 97
  store i32 %.pre.i, i32* %arrayidx2.96.i, align 4, !tbaa !2
  %arrayidx2.97.i = getelementptr inbounds i32, i32* %a, i64 98
  store i32 %.pre.i, i32* %arrayidx2.97.i, align 4, !tbaa !2
  %arrayidx2.98.i = getelementptr inbounds i32, i32* %a, i64 99
  store i32 %.pre.i, i32* %arrayidx2.98.i, align 4, !tbaa !2
  %0 = bitcast %"class.std::vector"* %myvec.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #3
  %1 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0
  %_M_impl.i.i.i.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1, i64 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %_M_impl.i.i.i.i to %"class.std::allocator"*
  %3 = bitcast %"class.std::allocator"* %2 to %"class.__gnu_cxx::new_allocator"*
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %_M_impl.i.i.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #3
  br label %for.body.i.i

for.cond.cleanup.i.i:                             ; preds = %_ZNSt6vectorIiSaIiEE9push_backERKi.exit.i.i
  %arrayidx5.i.i = getelementptr inbounds i32, i32* %a, i64 99
  %5 = load i32, i32* %arrayidx5.i.i, align 4, !tbaa !2
  %conv.i.i = sext i32 %5 to i64
  %_M_finish.i.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast i32** %_M_finish.i.i.i.i.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !6
  %8 = bitcast %"class.std::vector"* %myvec.i.i to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !10
  %sub.ptr.sub.i.i.i.i.i = sub i64 %7, %9
  %sub.ptr.div.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i, 2
  %cmp.i.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i.i, %conv.i.i
  br i1 %cmp.i.i.i.i, label %_ZNSt6vectorIiSaIiEE2atEm.exit.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %for.cond.cleanup.i.i
  %_M_finish.i1.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i32** %_M_finish.i1.i.i.i.i to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !6
  %12 = bitcast %"class.std::vector"* %myvec.i.i to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !10
  %sub.ptr.sub.i2.i.i.i.i = sub i64 %11, %13
  %sub.ptr.div.i3.i.i.i.i = ashr exact i64 %sub.ptr.sub.i2.i.i.i.i, 2
  invoke void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i64 %conv.i.i, i64 %sub.ptr.div.i3.i.i.i.i) #12
          to label %.noexc.i.i unwind label %lpad6.i.i

.noexc.i.i:                                       ; preds = %if.then.i.i.i.i
  unreachable

_ZNSt6vectorIiSaIiEE2atEm.exit.i.i:               ; preds = %for.cond.cleanup.i.i
  %_M_start.i.i1.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %_M_start.i.i1.i.i, align 8, !tbaa !10
  %add.ptr.i.i.i.i = getelementptr inbounds i32, i32* %14, i64 %conv.i.i
  %15 = load i32, i32* %add.ptr.i.i.i.i, align 4, !tbaa !2
  %16 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0
  %_M_start.i16.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 0
  %17 = load i32*, i32** %_M_start.i16.i.i, align 8, !tbaa !10
  %_M_finish.i17.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 1
  %18 = load i32*, i32** %_M_finish.i17.i.i, align 8, !tbaa !6
  %19 = bitcast %"struct.std::_Vector_base"* %16 to %"class.std::allocator"*
  %_M_start.i.i18.i.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i64 0, i32 0, i32 0
  %20 = load i32*, i32** %_M_start.i.i18.i.i, align 8, !tbaa !10
  %_M_end_of_storage.i.i19.i.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i64 0, i32 0, i32 2
  %21 = bitcast i32** %_M_end_of_storage.i.i19.i.i to i64*
  %22 = load i64, i64* %21, align 8, !tbaa !11
  %sub.ptr.rhs.cast.i.i20.i.i = ptrtoint i32* %20 to i64
  %sub.ptr.sub.i.i21.i.i = sub i64 %22, %sub.ptr.rhs.cast.i.i20.i.i
  %sub.ptr.div.i.i22.i.i = ashr exact i64 %sub.ptr.sub.i.i21.i.i, 2
  %tobool.i.i.i23.i.i = icmp eq i32* %20, null
  br i1 %tobool.i.i.i23.i.i, label %_Z8randfunciPi.exit, label %if.then.i.i.i24.i.i

for.body.i.i:                                     ; preds = %_ZNSt6vectorIiSaIiEE9push_backERKi.exit.i.i, %for.cond.cleanup
  %indvars.iv.i.i = phi i64 [ 1, %for.cond.cleanup ], [ %indvars.iv.next.i.i, %_ZNSt6vectorIiSaIiEE9push_backERKi.exit.i.i ]
  %23 = add nsw i64 %indvars.iv.i.i, -1
  %arrayidx.i.i = getelementptr inbounds i32, i32* %a, i64 %23
  %24 = load i32, i32* %arrayidx.i.i, align 4, !tbaa !2
  %mul.i.i = shl nsw i32 %24, 1
  %arrayidx2.i.i = getelementptr inbounds i32, i32* %a, i64 %indvars.iv.i.i
  store i32 %mul.i.i, i32* %arrayidx2.i.i, align 4, !tbaa !2
  %_M_finish.i2.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 1
  %25 = load i32*, i32** %_M_finish.i2.i.i, align 8, !tbaa !6
  %_M_end_of_storage.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 2
  %26 = load i32*, i32** %_M_end_of_storage.i.i.i, align 8, !tbaa !11
  %cmp.i.i.i = icmp eq i32* %25, %26
  br i1 %cmp.i.i.i, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %for.body.i.i
  %27 = bitcast %"class.std::vector"* %myvec.i.i to %"class.std::allocator"*
  %28 = bitcast %"class.std::allocator"* %27 to %"class.__gnu_cxx::new_allocator"*
  %29 = load i32, i32* %arrayidx2.i.i, align 4, !tbaa !2
  store i32 %29, i32* %25, align 4, !tbaa !2
  %30 = load i32*, i32** %_M_finish.i2.i.i, align 8, !tbaa !6
  %incdec.ptr.i.i.i = getelementptr inbounds i32, i32* %30, i64 1
  store i32* %incdec.ptr.i.i.i, i32** %_M_finish.i2.i.i, align 8, !tbaa !6
  br label %_ZNSt6vectorIiSaIiEE9push_backERKi.exit.i.i

if.else.i.i.i:                                    ; preds = %for.body.i.i
  %31 = bitcast i64* %__n.addr.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31)
  store i64 1, i64* %__n.addr.i.i.i.i.i, align 8, !tbaa !12
  %32 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base"* %32 to %"class.std::allocator"*
  %34 = bitcast %"class.std::allocator"* %33 to %"class.__gnu_cxx::new_allocator"*
  %_M_finish.i7.i.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast i32** %_M_finish.i7.i.i.i.i.i to i64*
  %36 = load i64, i64* %35, align 8, !tbaa !6
  %37 = bitcast %"class.std::vector"* %myvec.i.i to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !10
  %sub.ptr.sub.i8.i.i.i.i.i = sub i64 %36, %38
  %sub.ptr.div.i9.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i8.i.i.i.i.i, 2
  %sub.i.i.i.i.i = sub i64 4611686018427387903, %sub.ptr.div.i9.i.i.i.i.i
  %cmp.i.i.i.i.i = icmp ult i64 %sub.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i.i3.i.i, label %if.end.i.i.i.i.i

if.then.i.i.i3.i.i:                               ; preds = %if.else.i.i.i
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #12
          to label %.noexc13.i.i unwind label %lpad.i.i

.noexc13.i.i:                                     ; preds = %if.then.i.i.i3.i.i
  unreachable

if.end.i.i.i.i.i:                                 ; preds = %if.else.i.i.i
  %_M_finish.i4.i.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast i32** %_M_finish.i4.i.i.i.i.i to i64*
  %40 = load i64, i64* %39, align 8, !tbaa !6
  %41 = bitcast %"class.std::vector"* %myvec.i.i to i64*
  %42 = load i64, i64* %41, align 8, !tbaa !10
  %sub.ptr.sub.i5.i.i.i.i.i = sub i64 %40, %42
  %sub.ptr.div.i6.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i5.i.i.i.i.i, 2
  %43 = bitcast i64* %ref.tmp.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #3
  %_M_finish.i1.i.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 1
  %44 = bitcast i32** %_M_finish.i1.i.i.i.i.i to i64*
  %45 = load i64, i64* %44, align 8, !tbaa !6
  %46 = bitcast %"class.std::vector"* %myvec.i.i to i64*
  %47 = load i64, i64* %46, align 8, !tbaa !10
  %sub.ptr.sub.i2.i.i.i.i.i = sub i64 %45, %47
  %sub.ptr.div.i3.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i2.i.i.i.i.i, 2
  store i64 %sub.ptr.div.i3.i.i.i.i.i, i64* %ref.tmp.i.i.i.i.i, align 8, !tbaa !12
  %48 = load i64, i64* %ref.tmp.i.i.i.i.i, align 8, !tbaa !12
  %49 = load i64, i64* %__n.addr.i.i.i.i.i, align 8, !tbaa !12
  %cmp.i.i.i.i.i.i = icmp ult i64 %48, %49
  %__b.__a.i.i.i.i.i.i = select i1 %cmp.i.i.i.i.i.i, i64* %__n.addr.i.i.i.i.i, i64* %ref.tmp.i.i.i.i.i
  %50 = load i64, i64* %__b.__a.i.i.i.i.i.i, align 8, !tbaa !12
  %add.i.i.i.i.i = add i64 %50, %sub.ptr.div.i6.i.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #3
  %_M_finish.i.i.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 1
  %51 = bitcast i32** %_M_finish.i.i.i.i.i.i to i64*
  %52 = load i64, i64* %51, align 8, !tbaa !6
  %53 = bitcast %"class.std::vector"* %myvec.i.i to i64*
  %54 = load i64, i64* %53, align 8, !tbaa !10
  %sub.ptr.sub.i.i.i.i.i.i = sub i64 %52, %54
  %sub.ptr.div.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i, 2
  %cmp7.i.i.i.i.i = icmp ult i64 %add.i.i.i.i.i, %sub.ptr.div.i.i.i.i.i.i
  br i1 %cmp7.i.i.i.i.i, label %cond.true.i.i.i.i.i, label %lor.lhs.false.i.i.i.i.i

lor.lhs.false.i.i.i.i.i:                          ; preds = %if.end.i.i.i.i.i
  %55 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base"* %55 to %"class.std::allocator"*
  %57 = bitcast %"class.std::allocator"* %56 to %"class.__gnu_cxx::new_allocator"*
  %cmp9.i.i.i.i.i = icmp ugt i64 %add.i.i.i.i.i, 4611686018427387903
  br i1 %cmp9.i.i.i.i.i, label %cond.true.i.i.i.i.i, label %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i.i

cond.true.i.i.i.i.i:                              ; preds = %lor.lhs.false.i.i.i.i.i, %if.end.i.i.i.i.i
  %58 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base"* %58 to %"class.std::allocator"*
  %60 = bitcast %"class.std::allocator"* %59 to %"class.__gnu_cxx::new_allocator"*
  br label %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i.i

_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i.i: ; preds = %cond.true.i.i.i.i.i, %lor.lhs.false.i.i.i.i.i
  %cond.i.i.i.i.i = phi i64 [ 4611686018427387903, %cond.true.i.i.i.i.i ], [ %add.i.i.i.i.i, %lor.lhs.false.i.i.i.i.i ]
  %61 = bitcast i64* %__n.addr.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61)
  %62 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0
  %cmp.i1.i.i.i.i = icmp eq i64 %cond.i.i.i.i.i, 0
  br i1 %cmp.i1.i.i.i.i, label %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i.i.i, label %cond.true.i2.i.i.i.i

cond.true.i2.i.i.i.i:                             ; preds = %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i.i
  %63 = bitcast %"struct.std::_Vector_base"* %62 to %"class.std::allocator"*
  %64 = bitcast %"class.std::allocator"* %63 to %"class.__gnu_cxx::new_allocator"*
  %cmp.i.i.i.i.i.i.i = icmp ult i64 4611686018427387903, %cond.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i, label %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i.i

if.then.i.i.i.i.i.i.i:                            ; preds = %cond.true.i2.i.i.i.i
  invoke void @_ZSt17__throw_bad_allocv() #12
          to label %.noexc14.i.i unwind label %lpad.i.i

.noexc14.i.i:                                     ; preds = %if.then.i.i.i.i.i.i.i
  unreachable

_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i.i: ; preds = %cond.true.i2.i.i.i.i
  %mul.i.i.i.i.i.i.i = shl i64 %cond.i.i.i.i.i, 2
  %call2.i.i.i.i.i15.i.i = invoke i8* @_Znwm(i64 %mul.i.i.i.i.i.i.i)
          to label %call2.i.i.i.i.i.noexc.i.i unwind label %lpad.i.i

call2.i.i.i.i.i.noexc.i.i:                        ; preds = %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i.i
  %65 = bitcast i8* %call2.i.i.i.i.i15.i.i to i32*
  br label %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i.i.i

_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i.i.i: ; preds = %call2.i.i.i.i.i.noexc.i.i, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i.i
  %cond.i3.i.i.i.i = phi i32* [ %65, %call2.i.i.i.i.i.noexc.i.i ], [ null, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i.i ]
  %66 = bitcast %"class.std::vector"* %myvec.i.i to %"class.std::allocator"*
  %_M_finish.i.i.i4.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 1
  %67 = bitcast i32** %_M_finish.i.i.i4.i.i to i64*
  %68 = load i64, i64* %67, align 8, !tbaa !6
  %69 = bitcast %"class.std::vector"* %myvec.i.i to i64*
  %70 = load i64, i64* %69, align 8, !tbaa !10
  %sub.ptr.sub.i.i.i5.i.i = sub i64 %68, %70
  %sub.ptr.div.i.i.i6.i.i = ashr exact i64 %sub.ptr.sub.i.i.i5.i.i, 2
  %add.ptr.i.i7.i.i = getelementptr inbounds i32, i32* %cond.i3.i.i.i.i, i64 %sub.ptr.div.i.i.i6.i.i
  %71 = bitcast %"class.std::allocator"* %66 to %"class.__gnu_cxx::new_allocator"*
  %72 = load i32, i32* %arrayidx2.i.i, align 4, !tbaa !2
  store i32 %72, i32* %add.ptr.i.i7.i.i, align 4, !tbaa !2
  %_M_start.i.i8.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 0
  %73 = load i32*, i32** %_M_start.i.i8.i.i, align 8, !tbaa !10
  %_M_finish.i.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 1
  %74 = load i32*, i32** %_M_finish.i.i.i.i, align 8, !tbaa !6
  %75 = bitcast %"struct.std::_Vector_base"* %62 to %"class.std::allocator"*
  %76 = bitcast %"class.std::move_iterator"* %retval.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76)
  %_M_current.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i.i.i.i.i.i, i64 0, i32 0
  store i32* %73, i32** %_M_current.i.i.i.i.i.i.i, align 8, !tbaa !14
  %coerce.dive.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i.i.i.i.i.i, i64 0, i32 0
  %77 = load i32*, i32** %coerce.dive.i.i.i.i.i.i, align 8
  %78 = bitcast %"class.std::move_iterator"* %retval.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %78)
  %79 = bitcast %"class.std::move_iterator"* %retval.i1.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %79)
  %_M_current.i.i2.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i1.i.i.i.i.i, i64 0, i32 0
  store i32* %74, i32** %_M_current.i.i2.i.i.i.i.i, align 8, !tbaa !14
  %coerce.dive.i3.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i1.i.i.i.i.i, i64 0, i32 0
  %80 = load i32*, i32** %coerce.dive.i3.i.i.i.i.i, align 8
  %81 = bitcast %"class.std::move_iterator"* %retval.i1.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %81)
  %82 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %82)
  %coerce.dive.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i.i.i.i, i64 0, i32 0
  store i32* %77, i32** %coerce.dive.i.i.i.i.i.i.i.i.i.i.i, align 8
  %_M_current.i.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i.i.i.i, i64 0, i32 0
  %83 = load i32*, i32** %_M_current.i.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !14
  %84 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84)
  %85 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %85)
  %coerce.dive.i.i2.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i.i.i.i, i64 0, i32 0
  store i32* %80, i32** %coerce.dive.i.i2.i.i.i.i.i.i.i.i.i, align 8
  %_M_current.i.i.i3.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i.i.i.i, i64 0, i32 0
  %86 = load i32*, i32** %_M_current.i.i.i3.i.i.i.i.i.i.i.i.i, align 8, !tbaa !14
  %87 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87)
  %sub.ptr.lhs.cast.i.i.i.i.i.i.i.i.i.i.i.i = ptrtoint i32* %86 to i64
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i.i.i.i.i = ptrtoint i32* %83 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i.i.i.i.i.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i.i.i, 2
  %tobool.i.i.i.i.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i.i.i.i, label %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i.i.i, label %if.then.i.i.i.i.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i.i.i.i.i:                  ; preds = %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i.i.i
  %88 = bitcast i32* %cond.i3.i.i.i.i to i8*
  %89 = bitcast i32* %83 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %89, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i.i.i, i1 false) #3
  br label %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i.i.i

_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i.i.i: ; preds = %if.then.i.i.i.i.i.i.i.i.i.i.i.i, %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i.i.i
  %add.ptr.i.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %cond.i3.i.i.i.i, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i.i.i.i
  %incdec.ptr.i.i.i.i = getelementptr inbounds i32, i32* %add.ptr.i.i.i.i.i.i.i.i.i.i.i.i, i64 1
  %90 = load i32*, i32** %_M_start.i.i8.i.i, align 8, !tbaa !10
  %91 = load i32*, i32** %_M_finish.i.i.i.i, align 8, !tbaa !6
  %92 = bitcast %"struct.std::_Vector_base"* %62 to %"class.std::allocator"*
  %93 = load i32*, i32** %_M_start.i.i8.i.i, align 8, !tbaa !10
  %_M_end_of_storage.i.i9.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 2
  %94 = bitcast i32** %_M_end_of_storage.i.i9.i.i to i64*
  %95 = load i64, i64* %94, align 8, !tbaa !11
  %sub.ptr.rhs.cast.i.i10.i.i = ptrtoint i32* %93 to i64
  %sub.ptr.sub.i.i11.i.i = sub i64 %95, %sub.ptr.rhs.cast.i.i10.i.i
  %sub.ptr.div.i.i12.i.i = ashr exact i64 %sub.ptr.sub.i.i11.i.i, 2
  %tobool.i9.i.i.i.i = icmp eq i32* %93, null
  br i1 %tobool.i9.i.i.i.i, label %_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit.i.i.i, label %if.then.i10.i.i.i.i

if.then.i10.i.i.i.i:                              ; preds = %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i.i.i
  %96 = bitcast %"struct.std::_Vector_base"* %62 to %"class.std::allocator"*
  %97 = bitcast %"class.std::allocator"* %96 to %"class.__gnu_cxx::new_allocator"*
  %98 = bitcast i32* %93 to i8*
  call void @_ZdlPv(i8* %98) #3
  br label %_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit.i.i.i

_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit.i.i.i: ; preds = %if.then.i10.i.i.i.i, %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit.i.i.i.i
  store i32* %cond.i3.i.i.i.i, i32** %_M_start.i.i8.i.i, align 8, !tbaa !10
  store i32* %incdec.ptr.i.i.i.i, i32** %_M_finish.i.i.i.i, align 8, !tbaa !6
  %add.ptr33.i.i.i.i = getelementptr inbounds i32, i32* %cond.i3.i.i.i.i, i64 %cond.i.i.i.i.i
  store i32* %add.ptr33.i.i.i.i, i32** %_M_end_of_storage.i.i9.i.i, align 8, !tbaa !11
  br label %_ZNSt6vectorIiSaIiEE9push_backERKi.exit.i.i

_ZNSt6vectorIiSaIiEE9push_backERKi.exit.i.i:      ; preds = %_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_.exit.i.i.i, %if.then.i.i.i
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %cmp.i.i = icmp ult i64 %indvars.iv.next.i.i, 100
  br i1 %cmp.i.i, label %for.body.i.i, label %for.cond.cleanup.i.i

lpad.i.i:                                         ; preds = %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i.i, %if.then.i.i.i.i.i.i.i, %if.then.i.i.i3.i.i
  %99 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup.i.i

if.then.i.i.i24.i.i:                              ; preds = %_ZNSt6vectorIiSaIiEE2atEm.exit.i.i
  %100 = bitcast %"struct.std::_Vector_base"* %16 to %"class.std::allocator"*
  %101 = bitcast %"class.std::allocator"* %100 to %"class.__gnu_cxx::new_allocator"*
  %102 = bitcast i32* %20 to i8*
  call void @_ZdlPv(i8* %102) #3
  br label %_Z8randfunciPi.exit

lpad6.i.i:                                        ; preds = %if.then.i.i.i.i
  %103 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup.i.i

ehcleanup.i.i:                                    ; preds = %lpad6.i.i, %lpad.i.i
  %.sink21.i.i = phi { i8*, i32 } [ %103, %lpad6.i.i ], [ %99, %lpad.i.i ]
  %104 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0
  %_M_start.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 0
  %105 = load i32*, i32** %_M_start.i.i.i, align 8, !tbaa !10
  %_M_finish.i.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %myvec.i.i, i64 0, i32 0, i32 0, i32 1
  %106 = load i32*, i32** %_M_finish.i.i.i, align 8, !tbaa !6
  %107 = bitcast %"struct.std::_Vector_base"* %104 to %"class.std::allocator"*
  %_M_start.i.i.i.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %104, i64 0, i32 0, i32 0
  %108 = load i32*, i32** %_M_start.i.i.i.i, align 8, !tbaa !10
  %_M_end_of_storage.i.i.i.i = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %104, i64 0, i32 0, i32 2
  %109 = bitcast i32** %_M_end_of_storage.i.i.i.i to i64*
  %110 = load i64, i64* %109, align 8, !tbaa !11
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint i32* %108 to i64
  %sub.ptr.sub.i.i.i.i = sub i64 %110, %sub.ptr.rhs.cast.i.i.i.i
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %tobool.i.i.i.i.i = icmp eq i32* %108, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIiSaIiEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %ehcleanup.i.i
  %111 = bitcast %"struct.std::_Vector_base"* %104 to %"class.std::allocator"*
  %112 = bitcast %"class.std::allocator"* %111 to %"class.__gnu_cxx::new_allocator"*
  %113 = bitcast i32* %108 to i8*
  call void @_ZdlPv(i8* %113) #3
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit.i.i

_ZNSt6vectorIiSaIiEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %ehcleanup.i.i
  %114 = bitcast %"struct.std::_Vector_base"* %104 to %"class.__gnu_cxx::new_allocator"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #3
  resume { i8*, i32 } %.sink21.i.i

_Z8randfunciPi.exit:                              ; preds = %_ZNSt6vectorIiSaIiEE2atEm.exit.i.i, %if.then.i.i.i24.i.i
  %115 = bitcast %"struct.std::_Vector_base"* %16 to %"class.__gnu_cxx::new_allocator"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #3
  %arrayidx3.i = getelementptr inbounds i32, i32* %a, i64 99
  %116 = load i32, i32* %arrayidx3.i, align 4, !tbaa !2
  %arrayidx3 = getelementptr inbounds i32, i32* %a, i64 99
  %117 = load i32, i32* %arrayidx3, align 4, !tbaa !2
  %call4 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %117)
  %call5 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %call4, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret void

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %118 = add nsw i64 %indvars.iv, -1
  %arrayidx = getelementptr inbounds i32, i32* %a, i64 %118
  %119 = load i32, i32* %arrayidx, align 4, !tbaa !2
  %mul = shl nsw i32 %119, 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx2 = getelementptr inbounds i32, i32* %a, i64 %indvars.iv.next
  store i32 %mul, i32* %arrayidx2, align 4, !tbaa !2
  %exitcond = icmp eq i64 %indvars.iv.next, 10
  br i1 %exitcond, label %for.cond.cleanup, label %for.body, !llvm.loop !16
}

declare dso_local dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: noinline uwtable
declare dso_local dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #0 align 2

; Function Attrs: noinline uwtable
declare dso_local dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #0

; Function Attrs: noinline norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #6 {
entry:
  %a = alloca [100 x i32], align 16
  tail call void @srand(i32 7) #3
  %0 = bitcast [100 x i32]* %a to i8*
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %0) #3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  %arraydecay = getelementptr inbounds [100 x i32], [100 x i32]* %a, i64 0, i64 0
  call void @_Z17_kernel_testbenchPi(i32* nonnull %arraydecay)
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %0) #3
  ret i32 0

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %call = tail call i32 @rand() #3
  %rem = srem i32 %call, 100
  %arrayidx = getelementptr inbounds [100 x i32], [100 x i32]* %a, i64 0, i64 %indvars.iv
  store i32 %rem, i32* %arrayidx, align 4, !tbaa !2
  %call1 = tail call i32 @rand() #3
  %call5 = tail call i32 @rand() #3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 100
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind
declare dso_local void @srand(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare dso_local i32 @rand() local_unnamed_addr #2

; Function Attrs: noinline norecurse uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this, i64 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %_M_impl to %"class.std::allocator"*
  %1 = bitcast %"class.std::allocator"* %0 to %"class.__gnu_cxx::new_allocator"*
  %2 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %_M_impl to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #3
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) local_unnamed_addr #7 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #3
  tail call void @_ZSt9terminatev() #13
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %this) unnamed_addr #8 comdat align 2 {
entry:
  %0 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %this to %"class.std::allocator"*
  %1 = bitcast %"class.std::allocator"* %0 to %"class.__gnu_cxx::new_allocator"*
  %2 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %this to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local void @_ZNSaIiEC2Ev(%"class.std::allocator"* %this) unnamed_addr #8 comdat align 2 {
entry:
  %0 = bitcast %"class.std::allocator"* %this to %"class.__gnu_cxx::new_allocator"*
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator"* %this) unnamed_addr #8 comdat align 2 {
entry:
  ret void
}

; Function Attrs: noinline norecurse uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %__first, i32* %__last, %"class.std::allocator"* dereferenceable(1)) local_unnamed_addr #6 comdat {
entry:
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %this) local_unnamed_addr #8 comdat align 2 {
entry:
  %0 = bitcast %"struct.std::_Vector_base"* %this to %"class.std::allocator"*
  ret %"class.std::allocator"* %0
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this, i64 0, i32 0, i32 0
  %0 = load i32*, i32** %_M_start, align 8, !tbaa !10
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this, i64 0, i32 0, i32 2
  %1 = bitcast i32** %_M_end_of_storage to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !11
  %sub.ptr.rhs.cast = ptrtoint i32* %0 to i64
  %sub.ptr.sub = sub i64 %2, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %tobool.i = icmp eq i32* %0, null
  br i1 %tobool.i, label %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %3 = bitcast %"struct.std::_Vector_base"* %this to %"class.std::allocator"*
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = bitcast i32* %0 to i8*
  call void @_ZdlPv(i8* %5) #3
  br label %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit

_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit: ; preds = %entry, %if.then.i
  br label %invoke.cont

invoke.cont:                                      ; preds = %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit
  %6 = bitcast %"struct.std::_Vector_base"* %this to %"class.__gnu_cxx::new_allocator"*
  ret void

lpad:                                             ; No predecessors!
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = bitcast %"struct.std::_Vector_base"* %this to %"class.__gnu_cxx::new_allocator"*
  %10 = tail call i8* @__cxa_begin_catch(i8* %8) #3
  tail call void @_ZSt9terminatev() #13
  unreachable

__clang_call_terminate.exit:                      ; No predecessors!
  unreachable
}

; Function Attrs: noinline norecurse uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPiEvT_S1_(i32* %__first, i32* %__last) local_unnamed_addr #6 comdat {
entry:
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) local_unnamed_addr #8 comdat align 2 {
entry:
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base"* %this, i32* %__p, i64 %__n) local_unnamed_addr #0 comdat align 2 {
entry:
  %tobool = icmp eq i32* %__p, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = bitcast %"struct.std::_Vector_base"* %this to %"class.std::allocator"*
  %1 = bitcast %"class.std::allocator"* %0 to %"class.__gnu_cxx::new_allocator"*
  %2 = bitcast i32* %__p to i8*
  tail call void @_ZdlPv(i8* %2) #3
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator"* %this) unnamed_addr #8 comdat align 2 {
entry:
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator"* dereferenceable(1) %__a, i32* %__p, i64 %__n) local_unnamed_addr #0 comdat align 2 {
entry:
  %0 = bitcast %"class.std::allocator"* %__a to %"class.__gnu_cxx::new_allocator"*
  %1 = bitcast i32* %__p to i8*
  tail call void @_ZdlPv(i8* %1) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator"* %this, i32* %__p, i64) local_unnamed_addr #5 comdat align 2 {
entry:
  %1 = bitcast i32* %__p to i8*
  tail call void @_ZdlPv(i8* %1) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noinline norecurse uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS0_PT_DpOS5_(%"class.std::allocator"* dereferenceable(1) %__a, i32* %__p, i32* dereferenceable(4) %__args) local_unnamed_addr #6 comdat align 2 {
entry:
  %0 = bitcast %"class.std::allocator"* %__a to %"class.__gnu_cxx::new_allocator"*
  %1 = load i32, i32* %__args, align 4, !tbaa !2
  store i32 %1, i32* %__p, align 4, !tbaa !2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector"* %this, i32* dereferenceable(4) %__args) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %retval.i1.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i1.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %retval.i.i = alloca %"class.std::move_iterator", align 8
  %__n.addr.i = alloca i64, align 8
  %ref.tmp.i = alloca i64, align 8
  %0 = bitcast i64* %__n.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0)
  store i64 1, i64* %__n.addr.i, align 8, !tbaa !12
  %1 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base"* %1 to %"class.std::allocator"*
  %3 = bitcast %"class.std::allocator"* %2 to %"class.__gnu_cxx::new_allocator"*
  %_M_finish.i7.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i32** %_M_finish.i7.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !6
  %6 = bitcast %"class.std::vector"* %this to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !10
  %sub.ptr.sub.i8.i = sub i64 %5, %7
  %sub.ptr.div.i9.i = ashr exact i64 %sub.ptr.sub.i8.i, 2
  %sub.i = sub i64 4611686018427387903, %sub.ptr.div.i9.i
  %cmp.i = icmp ult i64 %sub.i, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #12
  unreachable

if.end.i:                                         ; preds = %entry
  %_M_finish.i4.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i32** %_M_finish.i4.i to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !6
  %10 = bitcast %"class.std::vector"* %this to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !10
  %sub.ptr.sub.i5.i = sub i64 %9, %11
  %sub.ptr.div.i6.i = ashr exact i64 %sub.ptr.sub.i5.i, 2
  %12 = bitcast i64* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #3
  %_M_finish.i1.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast i32** %_M_finish.i1.i to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !6
  %15 = bitcast %"class.std::vector"* %this to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !10
  %sub.ptr.sub.i2.i = sub i64 %14, %16
  %sub.ptr.div.i3.i = ashr exact i64 %sub.ptr.sub.i2.i, 2
  store i64 %sub.ptr.div.i3.i, i64* %ref.tmp.i, align 8, !tbaa !12
  %17 = load i64, i64* %ref.tmp.i, align 8, !tbaa !12
  %18 = load i64, i64* %__n.addr.i, align 8, !tbaa !12
  %cmp.i.i = icmp ult i64 %17, %18
  %__b.__a.i.i = select i1 %cmp.i.i, i64* %__n.addr.i, i64* %ref.tmp.i
  %19 = load i64, i64* %__b.__a.i.i, align 8, !tbaa !12
  %add.i = add i64 %19, %sub.ptr.div.i6.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #3
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast i32** %_M_finish.i.i to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !6
  %22 = bitcast %"class.std::vector"* %this to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !10
  %sub.ptr.sub.i.i = sub i64 %21, %23
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i.i
  br i1 %cmp7.i, label %cond.true.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end.i
  %24 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base"* %24 to %"class.std::allocator"*
  %26 = bitcast %"class.std::allocator"* %25 to %"class.__gnu_cxx::new_allocator"*
  %cmp9.i = icmp ugt i64 %add.i, 4611686018427387903
  br i1 %cmp9.i, label %cond.true.i, label %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit

cond.true.i:                                      ; preds = %lor.lhs.false.i, %if.end.i
  %27 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base"* %27 to %"class.std::allocator"*
  %29 = bitcast %"class.std::allocator"* %28 to %"class.__gnu_cxx::new_allocator"*
  br label %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit

_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit:    ; preds = %lor.lhs.false.i, %cond.true.i
  %cond.i = phi i64 [ 4611686018427387903, %cond.true.i ], [ %add.i, %lor.lhs.false.i ]
  %30 = bitcast i64* %__n.addr.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30)
  %31 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %cmp.i1 = icmp eq i64 %cond.i, 0
  br i1 %cmp.i1, label %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit, label %cond.true.i2

cond.true.i2:                                     ; preds = %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit
  %32 = bitcast %"struct.std::_Vector_base"* %31 to %"class.std::allocator"*
  %33 = bitcast %"class.std::allocator"* %32 to %"class.__gnu_cxx::new_allocator"*
  %cmp.i.i.i = icmp ult i64 4611686018427387903, %cond.i
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i

if.then.i.i.i:                                    ; preds = %cond.true.i2
  tail call void @_ZSt17__throw_bad_allocv() #12
  unreachable

_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i: ; preds = %cond.true.i2
  %mul.i.i.i = shl i64 %cond.i, 2
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i)
  %34 = bitcast i8* %call2.i.i.i to i32*
  br label %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit

_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit:  ; preds = %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit, %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i
  %cond.i3 = phi i32* [ %34, %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit ]
  %35 = bitcast %"class.std::vector"* %this to %"class.std::allocator"*
  %_M_finish.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %36 = bitcast i32** %_M_finish.i to i64*
  %37 = load i64, i64* %36, align 8, !tbaa !6
  %38 = bitcast %"class.std::vector"* %this to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !10
  %sub.ptr.sub.i = sub i64 %37, %39
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %add.ptr = getelementptr inbounds i32, i32* %cond.i3, i64 %sub.ptr.div.i
  %40 = bitcast %"class.std::allocator"* %35 to %"class.__gnu_cxx::new_allocator"*
  %41 = load i32, i32* %__args, align 4, !tbaa !2
  store i32 %41, i32* %add.ptr, align 4, !tbaa !2
  br label %invoke.cont

invoke.cont:                                      ; preds = %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit
  %_M_start = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 0
  %42 = load i32*, i32** %_M_start, align 8, !tbaa !10
  %_M_finish = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %43 = load i32*, i32** %_M_finish, align 8, !tbaa !6
  %44 = bitcast %"struct.std::_Vector_base"* %31 to %"class.std::allocator"*
  %45 = bitcast %"class.std::move_iterator"* %retval.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45)
  %_M_current.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i.i, i64 0, i32 0
  store i32* %42, i32** %_M_current.i.i.i, align 8, !tbaa !14
  %coerce.dive.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i.i, i64 0, i32 0
  %46 = load i32*, i32** %coerce.dive.i.i, align 8
  %47 = bitcast %"class.std::move_iterator"* %retval.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47)
  %48 = bitcast %"class.std::move_iterator"* %retval.i1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48)
  %_M_current.i.i2.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i1.i, i64 0, i32 0
  store i32* %43, i32** %_M_current.i.i2.i, align 8, !tbaa !14
  %coerce.dive.i3.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i1.i, i64 0, i32 0
  %49 = load i32*, i32** %coerce.dive.i3.i, align 8
  %50 = bitcast %"class.std::move_iterator"* %retval.i1.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50)
  %51 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51)
  %coerce.dive.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i, i64 0, i32 0
  store i32* %46, i32** %coerce.dive.i.i.i.i.i.i.i, align 8
  %_M_current.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i, i64 0, i32 0
  %52 = load i32*, i32** %_M_current.i.i.i.i.i.i.i.i, align 8, !tbaa !14
  %53 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53)
  %54 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54)
  %coerce.dive.i.i2.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i, i64 0, i32 0
  store i32* %49, i32** %coerce.dive.i.i2.i.i.i.i.i, align 8
  %_M_current.i.i.i3.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i, i64 0, i32 0
  %55 = load i32*, i32** %_M_current.i.i.i3.i.i.i.i.i, align 8, !tbaa !14
  %56 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56)
  %sub.ptr.lhs.cast.i.i.i.i.i.i.i.i = ptrtoint i32* %55 to i64
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i = ptrtoint i32* %52 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, 2
  %tobool.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i, label %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit, label %if.then.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i:                          ; preds = %invoke.cont
  %57 = bitcast i32* %cond.i3 to i8*
  %58 = bitcast i32* %52 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, i1 false) #3
  br label %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit

_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit: ; preds = %invoke.cont, %if.then.i.i.i.i.i.i.i.i
  %add.ptr.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %cond.i3, i64 %sub.ptr.div.i.i.i.i.i.i.i.i
  br label %invoke.cont8

invoke.cont8:                                     ; preds = %_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_.exit
  %incdec.ptr = getelementptr inbounds i32, i32* %add.ptr.i.i.i.i.i.i.i.i, i64 1
  %59 = load i32*, i32** %_M_start, align 8, !tbaa !10
  %60 = load i32*, i32** %_M_finish, align 8, !tbaa !6
  %61 = bitcast %"struct.std::_Vector_base"* %31 to %"class.std::allocator"*
  %62 = load i32*, i32** %_M_start, align 8, !tbaa !10
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 2
  %63 = bitcast i32** %_M_end_of_storage to i64*
  %64 = load i64, i64* %63, align 8, !tbaa !11
  %sub.ptr.rhs.cast = ptrtoint i32* %62 to i64
  %sub.ptr.sub = sub i64 %64, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %tobool.i9 = icmp eq i32* %62, null
  br i1 %tobool.i9, label %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit12, label %if.then.i10

if.then.i10:                                      ; preds = %invoke.cont8
  %65 = bitcast %"struct.std::_Vector_base"* %31 to %"class.std::allocator"*
  %66 = bitcast %"class.std::allocator"* %65 to %"class.__gnu_cxx::new_allocator"*
  %67 = bitcast i32* %62 to i8*
  tail call void @_ZdlPv(i8* %67) #3
  br label %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit12

_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit12: ; preds = %invoke.cont8, %if.then.i10
  store i32* %cond.i3, i32** %_M_start, align 8, !tbaa !10
  store i32* %incdec.ptr, i32** %_M_finish, align 8, !tbaa !6
  %add.ptr33 = getelementptr inbounds i32, i32* %cond.i3, i64 %cond.i
  store i32* %add.ptr33, i32** %_M_end_of_storage, align 8, !tbaa !11
  ret void

lpad:                                             ; No predecessors!
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  %70 = tail call i8* @__cxa_begin_catch(i8* %69) #3
  %tobool = icmp eq i32* null, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %lpad
  %_M_finish.i6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %71 = bitcast i32** %_M_finish.i6 to i64*
  %72 = load i64, i64* %71, align 8, !tbaa !6
  %73 = bitcast %"class.std::vector"* %this to i64*
  %74 = load i64, i64* %73, align 8, !tbaa !10
  %sub.ptr.sub.i7 = sub i64 %72, %74
  %sub.ptr.div.i8 = ashr exact i64 %sub.ptr.sub.i7, 2
  %add.ptr12 = getelementptr inbounds i32, i32* %cond.i3, i64 %sub.ptr.div.i8
  %75 = bitcast %"class.std::allocator"* %35 to %"class.__gnu_cxx::new_allocator"*
  br label %if.end

lpad13:                                           ; preds = %invoke.cont17
  %76 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %invoke.cont18 unwind label %terminate.lpad

if.else:                                          ; preds = %lpad
  %77 = bitcast %"struct.std::_Vector_base"* %31 to %"class.std::allocator"*
  br label %if.end

if.end:                                           ; preds = %if.then, %if.else
  %tobool.i = icmp eq i32* %cond.i3, null
  br i1 %tobool.i, label %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit, label %if.then.i4

if.then.i4:                                       ; preds = %if.end
  %78 = bitcast %"struct.std::_Vector_base"* %31 to %"class.std::allocator"*
  %79 = bitcast %"class.std::allocator"* %78 to %"class.__gnu_cxx::new_allocator"*
  %80 = bitcast i32* %cond.i3 to i8*
  call void @_ZdlPv(i8* %80) #3
  br label %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit

_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit: ; preds = %if.end, %if.then.i4
  br label %invoke.cont17

invoke.cont17:                                    ; preds = %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit
  invoke void @__cxa_rethrow() #12
          to label %unreachable unwind label %lpad13

invoke.cont18:                                    ; preds = %lpad13
  resume { i8*, i32 } %76

terminate.lpad:                                   ; preds = %lpad13
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  %83 = tail call i8* @__cxa_begin_catch(i8* %82) #3
  tail call void @_ZSt9terminatev() #13
  unreachable

__clang_call_terminate.exit:                      ; No predecessors!
  unreachable

unreachable:                                      ; preds = %invoke.cont17
  unreachable
}

; Function Attrs: noinline norecurse uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIiEE12_S_constructIiJRKiEEENSt9enable_ifIXsr6__and_INS1_18__construct_helperIT_JDpT0_EE4typeEEE5valueEvE4typeERS0_PS7_DpOS8_(%"class.std::allocator"* dereferenceable(1) %__a, i32* %__p, i32* dereferenceable(4) %__args) local_unnamed_addr #6 comdat align 2 {
entry:
  %0 = bitcast %"class.std::allocator"* %__a to %"class.__gnu_cxx::new_allocator"*
  %1 = load i32, i32* %__args, align 4, !tbaa !2
  store i32 %1, i32* %__p, align 4, !tbaa !2
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %__t) local_unnamed_addr #8 comdat {
entry:
  ret i32* %__t
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %this, i32* %__p, i32* dereferenceable(4) %__args) local_unnamed_addr #8 comdat align 2 {
entry:
  %0 = load i32, i32* %__args, align 4, !tbaa !2
  store i32 %0, i32* %__p, align 4, !tbaa !2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector"* %this, i64 %__n, i8* %__s) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %__n.addr = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !12
  %0 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base"* %0 to %"class.std::allocator"*
  %2 = bitcast %"class.std::allocator"* %1 to %"class.__gnu_cxx::new_allocator"*
  %_M_finish.i7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast i32** %_M_finish.i7 to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !6
  %5 = bitcast %"class.std::vector"* %this to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !10
  %sub.ptr.sub.i8 = sub i64 %4, %6
  %sub.ptr.div.i9 = ashr exact i64 %sub.ptr.sub.i8, 2
  %sub = sub i64 4611686018427387903, %sub.ptr.div.i9
  %cmp = icmp ult i64 %sub, %__n
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_ZSt20__throw_length_errorPKc(i8* %__s) #12
  unreachable

if.end:                                           ; preds = %entry
  %_M_finish.i4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i32** %_M_finish.i4 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !6
  %9 = bitcast %"class.std::vector"* %this to i64*
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %sub.ptr.sub.i5 = sub i64 %8, %10
  %sub.ptr.div.i6 = ashr exact i64 %sub.ptr.sub.i5, 2
  %11 = bitcast i64* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #3
  %_M_finish.i1 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast i32** %_M_finish.i1 to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !6
  %14 = bitcast %"class.std::vector"* %this to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !10
  %sub.ptr.sub.i2 = sub i64 %13, %15
  %sub.ptr.div.i3 = ashr exact i64 %sub.ptr.sub.i2, 2
  store i64 %sub.ptr.div.i3, i64* %ref.tmp, align 8, !tbaa !12
  %16 = load i64, i64* %ref.tmp, align 8, !tbaa !12
  %17 = load i64, i64* %__n.addr, align 8, !tbaa !12
  %cmp.i = icmp ult i64 %16, %17
  %__b.__a.i = select i1 %cmp.i, i64* %__n.addr, i64* %ref.tmp
  %18 = load i64, i64* %__b.__a.i, align 8, !tbaa !12
  %add = add i64 %18, %sub.ptr.div.i6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #3
  %_M_finish.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast i32** %_M_finish.i to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !6
  %21 = bitcast %"class.std::vector"* %this to i64*
  %22 = load i64, i64* %21, align 8, !tbaa !10
  %sub.ptr.sub.i = sub i64 %20, %22
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %cmp7 = icmp ult i64 %add, %sub.ptr.div.i
  br i1 %cmp7, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %23 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base"* %23 to %"class.std::allocator"*
  %25 = bitcast %"class.std::allocator"* %24 to %"class.__gnu_cxx::new_allocator"*
  %cmp9 = icmp ugt i64 %add, 4611686018427387903
  br i1 %cmp9, label %cond.true, label %cond.end

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %26 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base"* %26 to %"class.std::allocator"*
  %28 = bitcast %"class.std::allocator"* %27 to %"class.__gnu_cxx::new_allocator"*
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %lor.lhs.false
  %cond = phi i64 [ 4611686018427387903, %cond.true ], [ %add, %lor.lhs.false ]
  ret i64 %cond
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base"* %this, i64 %__n) local_unnamed_addr #0 comdat align 2 {
entry:
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %cond.end, label %cond.true

cond.true:                                        ; preds = %entry
  %0 = bitcast %"struct.std::_Vector_base"* %this to %"class.std::allocator"*
  %1 = bitcast %"class.std::allocator"* %0 to %"class.__gnu_cxx::new_allocator"*
  %cmp.i.i = icmp ult i64 4611686018427387903, %__n
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit

if.then.i.i:                                      ; preds = %cond.true
  tail call void @_ZSt17__throw_bad_allocv() #12
  unreachable

_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit: ; preds = %cond.true
  %mul.i.i = shl i64 %__n, 2
  %call2.i.i = tail call i8* @_Znwm(i64 %mul.i.i)
  %2 = bitcast i8* %call2.i.i to i32*
  br label %cond.end

cond.end:                                         ; preds = %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit, %entry
  %cond = phi i32* [ %2, %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit ], [ null, %entry ]
  ret i32* %cond
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %this) local_unnamed_addr #8 comdat align 2 {
entry:
  %_M_finish = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %0 = bitcast i32** %_M_finish to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !6
  %2 = bitcast %"class.std::vector"* %this to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !10
  %sub.ptr.sub = sub i64 %1, %3
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  ret i64 %sub.ptr.div
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %__first, i32* %__last, i32* %__result, %"class.std::allocator"* dereferenceable(1) %__alloc) local_unnamed_addr #0 comdat {
entry:
  %retval.i1 = alloca %"class.std::move_iterator", align 8
  %__it.i.i1.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %retval.i = alloca %"class.std::move_iterator", align 8
  %0 = bitcast %"class.std::move_iterator"* %retval.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0)
  %_M_current.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i, i64 0, i32 0
  store i32* %__first, i32** %_M_current.i.i, align 8, !tbaa !14
  %coerce.dive.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i, i64 0, i32 0
  %1 = load i32*, i32** %coerce.dive.i, align 8
  %2 = bitcast %"class.std::move_iterator"* %retval.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2)
  %3 = bitcast %"class.std::move_iterator"* %retval.i1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3)
  %_M_current.i.i2 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i1, i64 0, i32 0
  store i32* %__last, i32** %_M_current.i.i2, align 8, !tbaa !14
  %coerce.dive.i3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval.i1, i64 0, i32 0
  %4 = load i32*, i32** %coerce.dive.i3, align 8
  %5 = bitcast %"class.std::move_iterator"* %retval.i1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5)
  %6 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6)
  %coerce.dive.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i.i, i64 0, i32 0
  store i32* %1, i32** %coerce.dive.i.i.i.i.i.i, align 8
  %_M_current.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i.i, i64 0, i32 0
  %7 = load i32*, i32** %_M_current.i.i.i.i.i.i.i, align 8, !tbaa !14
  %8 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8)
  %9 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9)
  %coerce.dive.i.i2.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i.i, i64 0, i32 0
  store i32* %4, i32** %coerce.dive.i.i2.i.i.i.i, align 8
  %_M_current.i.i.i3.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i.i, i64 0, i32 0
  %10 = load i32*, i32** %_M_current.i.i.i3.i.i.i.i, align 8, !tbaa !14
  %11 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11)
  %sub.ptr.lhs.cast.i.i.i.i.i.i.i = ptrtoint i32* %10 to i64
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i = ptrtoint i32* %7 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i, 2
  %tobool.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i, label %_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E.exit, label %if.then.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i:                            ; preds = %entry
  %12 = bitcast i32* %__result to i8*
  %13 = bitcast i32* %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 %sub.ptr.sub.i.i.i.i.i.i.i, i1 false) #3
  br label %_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E.exit

_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E.exit: ; preds = %entry, %if.then.i.i.i.i.i.i.i
  %add.ptr.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %__result, i64 %sub.ptr.div.i.i.i.i.i.i.i
  ret i32* %add.ptr.i.i.i.i.i.i.i
}

; Function Attrs: noinline norecurse uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator"* dereferenceable(1) %__a, i32* %__p) local_unnamed_addr #6 comdat align 2 {
entry:
  %0 = bitcast %"class.std::allocator"* %__a to %"class.__gnu_cxx::new_allocator"*
  ret void
}

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector"* %this) local_unnamed_addr #8 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base"* %0 to %"class.std::allocator"*
  %2 = bitcast %"class.std::allocator"* %1 to %"class.__gnu_cxx::new_allocator"*
  ret i64 4611686018427387903
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #10

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %__a, i64* dereferenceable(8) %__b) local_unnamed_addr #8 comdat {
entry:
  %0 = load i64, i64* %__a, align 8, !tbaa !12
  %1 = load i64, i64* %__b, align 8, !tbaa !12
  %cmp = icmp ult i64 %0, %1
  %__b.__a = select i1 %cmp, i64* %__b, i64* %__a
  ret i64* %__b.__a
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator"* dereferenceable(1) %__a) local_unnamed_addr #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = bitcast %"class.std::allocator"* %__a to %"class.__gnu_cxx::new_allocator"*
  ret i64 4611686018427387903
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %this) local_unnamed_addr #8 comdat align 2 {
entry:
  %0 = bitcast %"struct.std::_Vector_base"* %this to %"class.std::allocator"*
  ret %"class.std::allocator"* %0
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIiEE11_S_max_sizeIKS0_vEEmRT_i(%"class.std::allocator"* dereferenceable(1) %__a, i32) local_unnamed_addr #8 comdat align 2 {
entry:
  %1 = bitcast %"class.std::allocator"* %__a to %"class.__gnu_cxx::new_allocator"*
  ret i64 4611686018427387903
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %this) local_unnamed_addr #8 comdat align 2 {
entry:
  ret i64 4611686018427387903
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1) %__a, i64 %__n) local_unnamed_addr #0 comdat align 2 {
entry:
  %0 = bitcast %"class.std::allocator"* %__a to %"class.__gnu_cxx::new_allocator"*
  %cmp.i = icmp ult i64 4611686018427387903, %__n
  br i1 %cmp.i, label %if.then.i, label %_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv.exit

if.then.i:                                        ; preds = %entry
  tail call void @_ZSt17__throw_bad_allocv() #12
  unreachable

_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv.exit: ; preds = %entry
  %mul.i = shl i64 %__n, 2
  %call2.i = tail call i8* @_Znwm(i64 %mul.i)
  %1 = bitcast i8* %call2.i to i32*
  ret i32* %1
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %this, i64 %__n, i8*) local_unnamed_addr #0 comdat align 2 {
entry:
  %cmp = icmp ult i64 4611686018427387903, %__n
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_ZSt17__throw_bad_allocv() #12
  unreachable

if.end:                                           ; preds = %entry
  %mul = shl i64 %__n, 2
  %call2 = tail call i8* @_Znwm(i64 %mul)
  %1 = bitcast i8* %call2 to i32*
  ret i32* %1
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #10

; Function Attrs: nobuiltin
declare dso_local noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %__first.coerce, i32* %__last.coerce, i32* %__result, %"class.std::allocator"* dereferenceable(1)) local_unnamed_addr #0 comdat {
entry:
  %__it.i.i1.i.i.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %1 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1)
  %coerce.dive.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i, i64 0, i32 0
  store i32* %__first.coerce, i32** %coerce.dive.i.i.i.i.i, align 8
  %_M_current.i.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i.i, i64 0, i32 0
  %2 = load i32*, i32** %_M_current.i.i.i.i.i.i, align 8, !tbaa !14
  %3 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3)
  %4 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  %coerce.dive.i.i2.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i, i64 0, i32 0
  store i32* %__last.coerce, i32** %coerce.dive.i.i2.i.i.i, align 8
  %_M_current.i.i.i3.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i.i, i64 0, i32 0
  %5 = load i32*, i32** %_M_current.i.i.i3.i.i.i, align 8, !tbaa !14
  %6 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6)
  %sub.ptr.lhs.cast.i.i.i.i.i.i = ptrtoint i32* %5 to i64
  %sub.ptr.rhs.cast.i.i.i.i.i.i = ptrtoint i32* %2 to i64
  %sub.ptr.sub.i.i.i.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i, 2
  %tobool.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i, label %_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_.exit, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %entry
  %7 = bitcast i32* %__result to i8*
  %8 = bitcast i32* %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 %sub.ptr.sub.i.i.i.i.i.i, i1 false) #3
  br label %_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_.exit

_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_.exit: ; preds = %entry, %if.then.i.i.i.i.i.i
  %add.ptr.i.i.i.i.i.i = getelementptr inbounds i32, i32* %__result, i64 %sub.ptr.div.i.i.i.i.i.i
  ret i32* %add.ptr.i.i.i.i.i.i
}

; Function Attrs: noinline norecurse uwtable
define linkonce_odr dso_local i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %__i) local_unnamed_addr #6 comdat {
entry:
  %retval = alloca %"class.std::move_iterator", align 8
  %_M_current.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval, i64 0, i32 0
  store i32* %__i, i32** %_M_current.i, align 8, !tbaa !14
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval, i64 0, i32 0
  %0 = load i32*, i32** %coerce.dive, align 8
  ret i32* %0
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %__first.coerce, i32* %__last.coerce, i32* %__result) local_unnamed_addr #0 comdat {
entry:
  %__it.i.i1.i.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i.i.i = alloca %"class.std::move_iterator", align 8
  %0 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0)
  %coerce.dive.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i, i64 0, i32 0
  store i32* %__first.coerce, i32** %coerce.dive.i.i.i.i, align 8
  %_M_current.i.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i.i, i64 0, i32 0
  %1 = load i32*, i32** %_M_current.i.i.i.i.i, align 8, !tbaa !14
  %2 = bitcast %"class.std::move_iterator"* %__it.i.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2)
  %3 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3)
  %coerce.dive.i.i2.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i, i64 0, i32 0
  store i32* %__last.coerce, i32** %coerce.dive.i.i2.i.i, align 8
  %_M_current.i.i.i3.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i.i, i64 0, i32 0
  %4 = load i32*, i32** %_M_current.i.i.i3.i.i, align 8, !tbaa !14
  %5 = bitcast %"class.std::move_iterator"* %__it.i.i1.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5)
  %sub.ptr.lhs.cast.i.i.i.i.i = ptrtoint i32* %4 to i64
  %sub.ptr.rhs.cast.i.i.i.i.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i.i.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i, 2
  %tobool.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i, label %_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_.exit, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %entry
  %6 = bitcast i32* %__result to i8*
  %7 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 %sub.ptr.sub.i.i.i.i.i, i1 false) #3
  br label %_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_.exit

_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_.exit: ; preds = %entry, %if.then.i.i.i.i.i
  %add.ptr.i.i.i.i.i = getelementptr inbounds i32, i32* %__result, i64 %sub.ptr.div.i.i.i.i.i
  ret i32* %add.ptr.i.i.i.i.i
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %__first.coerce, i32* %__last.coerce, i32* %__result) local_unnamed_addr #0 comdat align 2 {
entry:
  %__it.i.i1.i = alloca %"class.std::move_iterator", align 8
  %__it.i.i.i = alloca %"class.std::move_iterator", align 8
  %0 = bitcast %"class.std::move_iterator"* %__it.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0)
  %coerce.dive.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i, i64 0, i32 0
  store i32* %__first.coerce, i32** %coerce.dive.i.i.i, align 8
  %_M_current.i.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i.i, i64 0, i32 0
  %1 = load i32*, i32** %_M_current.i.i.i.i, align 8, !tbaa !14
  %2 = bitcast %"class.std::move_iterator"* %__it.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2)
  %3 = bitcast %"class.std::move_iterator"* %__it.i.i1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3)
  %coerce.dive.i.i2.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i, i64 0, i32 0
  store i32* %__last.coerce, i32** %coerce.dive.i.i2.i, align 8
  %_M_current.i.i.i3.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1.i, i64 0, i32 0
  %4 = load i32*, i32** %_M_current.i.i.i3.i, align 8, !tbaa !14
  %5 = bitcast %"class.std::move_iterator"* %__it.i.i1.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5)
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint i32* %4 to i64
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %tobool.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i, 0
  br i1 %tobool.i.i.i.i, label %_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_.exit, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  %6 = bitcast i32* %__result to i8*
  %7 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 %sub.ptr.sub.i.i.i.i, i1 false) #3
  br label %_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_.exit

_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_.exit: ; preds = %entry, %if.then.i.i.i.i
  %add.ptr.i.i.i.i = getelementptr inbounds i32, i32* %__result, i64 %sub.ptr.div.i.i.i.i
  ret i32* %add.ptr.i.i.i.i
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %__first.coerce, i32* %__last.coerce, i32* %__result) local_unnamed_addr #0 comdat {
entry:
  %__it.i.i1 = alloca %"class.std::move_iterator", align 8
  %__it.i.i = alloca %"class.std::move_iterator", align 8
  %0 = bitcast %"class.std::move_iterator"* %__it.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0)
  %coerce.dive.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i, i64 0, i32 0
  store i32* %__first.coerce, i32** %coerce.dive.i.i, align 8
  %_M_current.i.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i, i64 0, i32 0
  %1 = load i32*, i32** %_M_current.i.i.i, align 8, !tbaa !14
  %2 = bitcast %"class.std::move_iterator"* %__it.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2)
  %3 = bitcast %"class.std::move_iterator"* %__it.i.i1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3)
  %coerce.dive.i.i2 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1, i64 0, i32 0
  store i32* %__last.coerce, i32** %coerce.dive.i.i2, align 8
  %_M_current.i.i.i3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i.i1, i64 0, i32 0
  %4 = load i32*, i32** %_M_current.i.i.i3, align 8, !tbaa !14
  %5 = bitcast %"class.std::move_iterator"* %__it.i.i1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5)
  %sub.ptr.lhs.cast.i.i.i = ptrtoint i32* %4 to i64
  %sub.ptr.rhs.cast.i.i.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  %sub.ptr.div.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i, 2
  %tobool.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i, 0
  br i1 %tobool.i.i.i, label %_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %6 = bitcast i32* %__result to i8*
  %7 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 %sub.ptr.sub.i.i.i, i1 false) #3
  br label %_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_.exit

_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_.exit: ; preds = %entry, %if.then.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds i32, i32* %__result, i64 %sub.ptr.div.i.i.i
  ret i32* %add.ptr.i.i.i
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %__first, i32* %__last, i32* %__result) local_unnamed_addr #0 comdat {
entry:
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %__last to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %__first to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %tobool.i.i = icmp eq i64 %sub.ptr.sub.i.i, 0
  br i1 %tobool.i.i, label %_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  %0 = bitcast i32* %__result to i8*
  %1 = bitcast i32* %__first to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 %1, i64 %sub.ptr.sub.i.i, i1 false) #3
  br label %_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_.exit

_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_.exit:  ; preds = %entry, %if.then.i.i
  %add.ptr.i.i = getelementptr inbounds i32, i32* %__result, i64 %sub.ptr.div.i.i
  ret i32* %add.ptr.i.i
}

; Function Attrs: noinline norecurse uwtable
define linkonce_odr dso_local i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %__it.coerce) local_unnamed_addr #6 comdat {
entry:
  %__it.i = alloca %"class.std::move_iterator", align 8
  %0 = bitcast %"class.std::move_iterator"* %__it.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0)
  %coerce.dive.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i, i64 0, i32 0
  store i32* %__it.coerce, i32** %coerce.dive.i, align 8
  %_M_current.i.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it.i, i64 0, i32 0
  %1 = load i32*, i32** %_M_current.i.i, align 8, !tbaa !14
  %2 = bitcast %"class.std::move_iterator"* %__it.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2)
  ret i32* %1
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %__first, i32* %__last, i32* %__result) local_unnamed_addr #0 comdat {
entry:
  %sub.ptr.lhs.cast.i = ptrtoint i32* %__last to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %__first to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %tobool.i = icmp eq i64 %sub.ptr.sub.i, 0
  br i1 %tobool.i, label %_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %0 = bitcast i32* %__result to i8*
  %1 = bitcast i32* %__first to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 %1, i64 %sub.ptr.sub.i, i1 false) #3
  br label %_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_.exit

_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_.exit: ; preds = %entry, %if.then.i
  %add.ptr.i = getelementptr inbounds i32, i32* %__result, i64 %sub.ptr.div.i
  ret i32* %add.ptr.i
}

; Function Attrs: noinline norecurse uwtable
define linkonce_odr dso_local i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %__it) local_unnamed_addr #6 comdat {
entry:
  ret i32* %__it
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %__first, i32* %__last, i32* %__result) local_unnamed_addr #5 comdat align 2 {
entry:
  %sub.ptr.lhs.cast = ptrtoint i32* %__last to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %__first to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %tobool = icmp eq i64 %sub.ptr.sub, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = bitcast i32* %__result to i8*
  %1 = bitcast i32* %__first to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 %1, i64 %sub.ptr.sub, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %add.ptr = getelementptr inbounds i32, i32* %__result, i64 %sub.ptr.div
  ret i32* %add.ptr
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1) #4

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %__it) local_unnamed_addr #8 comdat align 2 {
entry:
  ret i32* %__it
}

; Function Attrs: noinline norecurse uwtable
define linkonce_odr dso_local i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %__it.coerce) local_unnamed_addr #6 comdat align 2 {
entry:
  %__it = alloca %"class.std::move_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it, i64 0, i32 0
  store i32* %__it.coerce, i32** %coerce.dive, align 8
  %_M_current.i = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it, i64 0, i32 0
  %0 = load i32*, i32** %_M_current.i, align 8, !tbaa !14
  ret i32* %0
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator"* %this) local_unnamed_addr #8 comdat align 2 {
entry:
  %_M_current = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %this, i64 0, i32 0
  %0 = load i32*, i32** %_M_current, align 8, !tbaa !14
  ret i32* %0
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator"* %this, i32* %__i) unnamed_addr #8 comdat align 2 {
entry:
  %_M_current = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %this, i64 0, i32 0
  store i32* %__i, i32** %_M_current, align 8, !tbaa !14
  ret void
}

; Function Attrs: noinline norecurse uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIiEE10_S_destroyIiEENSt9enable_ifIXsr6__and_INS1_16__destroy_helperIT_E4typeEEE5valueEvE4typeERS0_PS5_(%"class.std::allocator"* dereferenceable(1) %__a, i32* %__p) local_unnamed_addr #6 comdat align 2 {
entry:
  %0 = bitcast %"class.std::allocator"* %__a to %"class.__gnu_cxx::new_allocator"*
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator"* %this, i32* %__p) local_unnamed_addr #8 comdat align 2 {
entry:
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNKSt6vectorIiSaIiEE14_M_range_checkEm(%"class.std::vector"* %this, i64 %__n) local_unnamed_addr #0 comdat align 2 {
entry:
  %_M_finish.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %0 = bitcast i32** %_M_finish.i to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !6
  %2 = bitcast %"class.std::vector"* %this to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !10
  %sub.ptr.sub.i = sub i64 %1, %3
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %cmp = icmp ugt i64 %sub.ptr.div.i, %__n
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %_M_finish.i1 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i32** %_M_finish.i1 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !6
  %6 = bitcast %"class.std::vector"* %this to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !10
  %sub.ptr.sub.i2 = sub i64 %5, %7
  %sub.ptr.div.i3 = ashr exact i64 %sub.ptr.sub.i2, 2
  tail call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i64 %__n, i64 %sub.ptr.div.i3) #12
  unreachable

if.end:                                           ; preds = %entry
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define linkonce_odr dso_local dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %this, i64 %__n) local_unnamed_addr #8 comdat align 2 {
entry:
  %_M_start = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 0
  %0 = load i32*, i32** %_M_start, align 8, !tbaa !10
  %add.ptr = getelementptr inbounds i32, i32* %0, i64 %__n
  ret i32* %add.ptr
}

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) local_unnamed_addr #10

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_testbench.cc() #0 section ".text.startup" {
entry:
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #4

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (trunk 330892) (llvm/trunk 330891)"}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C++ TBAA"}
!6 = !{!7, !9, i64 8}
!7 = !{!"_ZTSSt12_Vector_baseIiSaIiEE", !8, i64 0}
!8 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !9, i64 0, !9, i64 8, !9, i64 16}
!9 = !{!"any pointer", !4, i64 0}
!10 = !{!7, !9, i64 0}
!11 = !{!7, !9, i64 16}
!12 = !{!13, !13, i64 0}
!13 = !{!"long", !4, i64 0}
!14 = !{!15, !9, i64 0}
!15 = !{!"_ZTSSt13move_iteratorIPiE", !9, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
